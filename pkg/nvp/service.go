// Code generated by gowsdl DO NOT EDIT.

package nvp

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type Amount string

type Boolean string

type DateTime string

type RequestMessage RequestMessage

type ReplyMessage ReplyMessage

type NvpRequest string

type NvpReply string

type FaultDetails FaultDetails

type Item struct {
	UnitPrice *Amount `xml:"unitPrice,omitempty"`

	Quantity *Amount `xml:"quantity,omitempty"`

	ProductCode string `xml:"productCode,omitempty"`

	ProductName string `xml:"productName,omitempty"`

	ProductSKU string `xml:"productSKU,omitempty"`

	ProductRisk string `xml:"productRisk,omitempty"`

	TaxAmount *Amount `xml:"taxAmount,omitempty"`

	CityOverrideAmount *Amount `xml:"cityOverrideAmount,omitempty"`

	CityOverrideRate *Amount `xml:"cityOverrideRate,omitempty"`

	CountyOverrideAmount *Amount `xml:"countyOverrideAmount,omitempty"`

	CountyOverrideRate *Amount `xml:"countyOverrideRate,omitempty"`

	DistrictOverrideAmount *Amount `xml:"districtOverrideAmount,omitempty"`

	DistrictOverrideRate *Amount `xml:"districtOverrideRate,omitempty"`

	StateOverrideAmount *Amount `xml:"stateOverrideAmount,omitempty"`

	StateOverrideRate *Amount `xml:"stateOverrideRate,omitempty"`

	CountryOverrideAmount *Amount `xml:"countryOverrideAmount,omitempty"`

	CountryOverrideRate *Amount `xml:"countryOverrideRate,omitempty"`

	OrderAcceptanceCity string `xml:"orderAcceptanceCity,omitempty"`

	OrderAcceptanceCounty string `xml:"orderAcceptanceCounty,omitempty"`

	OrderAcceptanceCountry string `xml:"orderAcceptanceCountry,omitempty"`

	OrderAcceptanceState string `xml:"orderAcceptanceState,omitempty"`

	OrderAcceptancePostalCode string `xml:"orderAcceptancePostalCode,omitempty"`

	OrderOriginCity string `xml:"orderOriginCity,omitempty"`

	OrderOriginCounty string `xml:"orderOriginCounty,omitempty"`

	OrderOriginCountry string `xml:"orderOriginCountry,omitempty"`

	OrderOriginState string `xml:"orderOriginState,omitempty"`

	OrderOriginPostalCode string `xml:"orderOriginPostalCode,omitempty"`

	ShipFromCity string `xml:"shipFromCity,omitempty"`

	ShipFromCounty string `xml:"shipFromCounty,omitempty"`

	ShipFromCountry string `xml:"shipFromCountry,omitempty"`

	ShipFromState string `xml:"shipFromState,omitempty"`

	ShipFromPostalCode string `xml:"shipFromPostalCode,omitempty"`

	Export string `xml:"export,omitempty"`

	NoExport string `xml:"noExport,omitempty"`

	NationalTax *Amount `xml:"nationalTax,omitempty"`

	VatRate *Amount `xml:"vatRate,omitempty"`

	SellerRegistration string `xml:"sellerRegistration,omitempty"`

	SellerRegistration0 string `xml:"sellerRegistration0,omitempty"`

	SellerRegistration1 string `xml:"sellerRegistration1,omitempty"`

	SellerRegistration2 string `xml:"sellerRegistration2,omitempty"`

	SellerRegistration3 string `xml:"sellerRegistration3,omitempty"`

	SellerRegistration4 string `xml:"sellerRegistration4,omitempty"`

	SellerRegistration5 string `xml:"sellerRegistration5,omitempty"`

	SellerRegistration6 string `xml:"sellerRegistration6,omitempty"`

	SellerRegistration7 string `xml:"sellerRegistration7,omitempty"`

	SellerRegistration8 string `xml:"sellerRegistration8,omitempty"`

	SellerRegistration9 string `xml:"sellerRegistration9,omitempty"`

	BuyerRegistration string `xml:"buyerRegistration,omitempty"`

	MiddlemanRegistration string `xml:"middlemanRegistration,omitempty"`

	PointOfTitleTransfer string `xml:"pointOfTitleTransfer,omitempty"`

	GiftCategory bool `xml:"giftCategory,omitempty"`

	TimeCategory string `xml:"timeCategory,omitempty"`

	HostHedge string `xml:"hostHedge,omitempty"`

	TimeHedge string `xml:"timeHedge,omitempty"`

	VelocityHedge string `xml:"velocityHedge,omitempty"`

	NonsensicalHedge string `xml:"nonsensicalHedge,omitempty"`

	PhoneHedge string `xml:"phoneHedge,omitempty"`

	ObscenitiesHedge string `xml:"obscenitiesHedge,omitempty"`

	UnitOfMeasure string `xml:"unitOfMeasure,omitempty"`

	TaxRate *Amount `xml:"taxRate,omitempty"`

	TotalAmount *Amount `xml:"totalAmount,omitempty"`

	DiscountAmount *Amount `xml:"discountAmount,omitempty"`

	DiscountRate *Amount `xml:"discountRate,omitempty"`

	CommodityCode string `xml:"commodityCode,omitempty"`

	GrossNetIndicator string `xml:"grossNetIndicator,omitempty"`

	TaxTypeApplied string `xml:"taxTypeApplied,omitempty"`

	DiscountIndicator string `xml:"discountIndicator,omitempty"`

	AlternateTaxID string `xml:"alternateTaxID,omitempty"`

	AlternateTaxAmount *Amount `xml:"alternateTaxAmount,omitempty"`

	AlternateTaxTypeApplied string `xml:"alternateTaxTypeApplied,omitempty"`

	AlternateTaxRate *Amount `xml:"alternateTaxRate,omitempty"`

	AlternateTaxType string `xml:"alternateTaxType,omitempty"`

	LocalTax *Amount `xml:"localTax,omitempty"`

	ZeroCostToCustomerIndicator string `xml:"zeroCostToCustomerIndicator,omitempty"`

	PassengerFirstName string `xml:"passengerFirstName,omitempty"`

	PassengerLastName string `xml:"passengerLastName,omitempty"`

	PassengerID string `xml:"passengerID,omitempty"`

	PassengerStatus string `xml:"passengerStatus,omitempty"`

	PassengerType string `xml:"passengerType,omitempty"`

	PassengerEmail string `xml:"passengerEmail,omitempty"`

	PassengerPhone string `xml:"passengerPhone,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	ProductDescription string `xml:"productDescription,omitempty"`

	TaxStatusIndicator string `xml:"taxStatusIndicator,omitempty"`

	DiscountManagementIndicator string `xml:"discountManagementIndicator,omitempty"`

	TypeOfSupply string `xml:"typeOfSupply,omitempty"`

	Sign string `xml:"sign,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type CCAuthService struct {
	Cavv string `xml:"cavv,omitempty"`

	CavvAlgorithm string `xml:"cavvAlgorithm,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	EciRaw string `xml:"eciRaw,omitempty"`

	Xid string `xml:"xid,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	AvsLevel string `xml:"avsLevel,omitempty"`

	FxQuoteID string `xml:"fxQuoteID,omitempty"`

	ReturnAuthRecord bool `xml:"returnAuthRecord,omitempty"`

	AuthType string `xml:"authType,omitempty"`

	VerbalAuthCode string `xml:"verbalAuthCode,omitempty"`

	BillPayment bool `xml:"billPayment,omitempty"`

	AuthenticationXID string `xml:"authenticationXID,omitempty"`

	AuthorizationXID string `xml:"authorizationXID,omitempty"`

	IndustryDatatype string `xml:"industryDatatype,omitempty"`

	TraceNumber string `xml:"traceNumber,omitempty"`

	ChecksumKey string `xml:"checksumKey,omitempty"`

	AggregatorID string `xml:"aggregatorID,omitempty"`

	AggregatorName string `xml:"aggregatorName,omitempty"`

	SplitTenderIndicator string `xml:"splitTenderIndicator,omitempty"`

	VeresEnrolled string `xml:"veresEnrolled,omitempty"`

	ParesStatus string `xml:"paresStatus,omitempty"`

	PartialAuthIndicator bool `xml:"partialAuthIndicator,omitempty"`

	CaptureDate string `xml:"captureDate,omitempty"`

	FirstRecurringPayment string `xml:"firstRecurringPayment,omitempty"`

	Duration int32 `xml:"duration,omitempty"`

	OverridePaymentMethod string `xml:"overridePaymentMethod,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type OCTService struct {
	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCSaleService struct {
	OverridePaymentMethod string `xml:"overridePaymentMethod,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	PartialAuthIndicator bool `xml:"partialAuthIndicator,omitempty"`

	Cavv string `xml:"cavv,omitempty"`

	Xid string `xml:"xid,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCSaleCreditService struct {
	OverridePaymentMethod string `xml:"overridePaymentMethod,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCSaleReversalService struct {
	SaleRequestID string `xml:"saleRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCIncrementalAuthService struct {
	AuthRequestID string `xml:"authRequestID,omitempty"`

	Duration int32 `xml:"duration,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCCaptureService struct {
	AuthType string `xml:"authType,omitempty"`

	VerbalAuthCode string `xml:"verbalAuthCode,omitempty"`

	AuthRequestID string `xml:"authRequestID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PartialPaymentID string `xml:"partialPaymentID,omitempty"`

	PurchasingLevel string `xml:"purchasingLevel,omitempty"`

	IndustryDatatype string `xml:"industryDatatype,omitempty"`

	AuthRequestToken string `xml:"authRequestToken,omitempty"`

	MerchantReceiptNumber string `xml:"merchantReceiptNumber,omitempty"`

	PosData string `xml:"posData,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	ChecksumKey string `xml:"checksumKey,omitempty"`

	GratuityAmount string `xml:"gratuityAmount,omitempty"`

	Duration int32 `xml:"duration,omitempty"`

	DpdeBillingMonth int32 `xml:"dpdeBillingMonth,omitempty"`

	Sequence string `xml:"sequence,omitempty"`

	TotalCount string `xml:"totalCount,omitempty"`

	ReconciliationIDAlternate string `xml:"reconciliationIDAlternate,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCCreditService struct {
	CaptureRequestID string `xml:"captureRequestID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PartialPaymentID string `xml:"partialPaymentID,omitempty"`

	PurchasingLevel string `xml:"purchasingLevel,omitempty"`

	IndustryDatatype string `xml:"industryDatatype,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	BillPayment bool `xml:"billPayment,omitempty"`

	AuthorizationXID string `xml:"authorizationXID,omitempty"`

	OccurrenceNumber string `xml:"occurrenceNumber,omitempty"`

	AuthCode string `xml:"authCode,omitempty"`

	CaptureRequestToken string `xml:"captureRequestToken,omitempty"`

	MerchantReceiptNumber string `xml:"merchantReceiptNumber,omitempty"`

	ChecksumKey string `xml:"checksumKey,omitempty"`

	AggregatorID string `xml:"aggregatorID,omitempty"`

	AggregatorName string `xml:"aggregatorName,omitempty"`

	Duration int32 `xml:"duration,omitempty"`

	DpdeBillingMonth int32 `xml:"dpdeBillingMonth,omitempty"`

	ReconciliationIDAlternate string `xml:"reconciliationIDAlternate,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCAuthReversalService struct {
	AuthRequestID string `xml:"authRequestID,omitempty"`

	AuthRequestToken string `xml:"authRequestToken,omitempty"`

	ReversalReason string `xml:"reversalReason,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCAutoAuthReversalService struct {
	AuthPaymentServiceData string `xml:"authPaymentServiceData,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	AuthAmount string `xml:"authAmount,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	AuthRequestID string `xml:"authRequestID,omitempty"`

	BillAmount string `xml:"billAmount,omitempty"`

	AuthCode string `xml:"authCode,omitempty"`

	AuthType string `xml:"authType,omitempty"`

	BillPayment bool `xml:"billPayment,omitempty"`

	DateAdded string `xml:"dateAdded,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CCDCCService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type ServiceFeeCalculateService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type ECDebitService struct {
	PaymentMode int32 `xml:"paymentMode,omitempty"`

	ReferenceNumber string `xml:"referenceNumber,omitempty"`

	SettlementMethod string `xml:"settlementMethod,omitempty"`

	TransactionToken string `xml:"transactionToken,omitempty"`

	VerificationLevel int32 `xml:"verificationLevel,omitempty"`

	PartialPaymentID string `xml:"partialPaymentID,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	DebitRequestID string `xml:"debitRequestID,omitempty"`

	EffectiveDate string `xml:"effectiveDate,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type ECCreditService struct {
	ReferenceNumber string `xml:"referenceNumber,omitempty"`

	SettlementMethod string `xml:"settlementMethod,omitempty"`

	TransactionToken string `xml:"transactionToken,omitempty"`

	DebitRequestID string `xml:"debitRequestID,omitempty"`

	PartialPaymentID string `xml:"partialPaymentID,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	DebitRequestToken string `xml:"debitRequestToken,omitempty"`

	EffectiveDate string `xml:"effectiveDate,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type ECAuthenticateService struct {
	ReferenceNumber string `xml:"referenceNumber,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayerAuthEnrollService struct {
	HttpAccept string `xml:"httpAccept,omitempty"`

	HttpUserAgent string `xml:"httpUserAgent,omitempty"`

	MerchantName string `xml:"merchantName,omitempty"`

	MerchantURL string `xml:"merchantURL,omitempty"`

	PurchaseDescription string `xml:"purchaseDescription,omitempty"`

	PurchaseTime string `xml:"purchaseTime,omitempty"`

	CountryCode string `xml:"countryCode,omitempty"`

	AcquirerBin string `xml:"acquirerBin,omitempty"`

	LoginID string `xml:"loginID,omitempty"`

	Password string `xml:"password,omitempty"`

	MerchantID string `xml:"merchantID,omitempty"`

	OverridePaymentMethod string `xml:"overridePaymentMethod,omitempty"`

	MobilePhone string `xml:"mobilePhone,omitempty"`

	MCC string `xml:"MCC,omitempty"`

	ProductCode string `xml:"productCode,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayerAuthValidateService struct {
	SignedPARes string `xml:"signedPARes,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type TaxService struct {
	Nexus string `xml:"nexus,omitempty"`

	NoNexus string `xml:"noNexus,omitempty"`

	OrderAcceptanceCity string `xml:"orderAcceptanceCity,omitempty"`

	OrderAcceptanceCounty string `xml:"orderAcceptanceCounty,omitempty"`

	OrderAcceptanceCountry string `xml:"orderAcceptanceCountry,omitempty"`

	OrderAcceptanceState string `xml:"orderAcceptanceState,omitempty"`

	OrderAcceptancePostalCode string `xml:"orderAcceptancePostalCode,omitempty"`

	OrderOriginCity string `xml:"orderOriginCity,omitempty"`

	OrderOriginCounty string `xml:"orderOriginCounty,omitempty"`

	OrderOriginCountry string `xml:"orderOriginCountry,omitempty"`

	OrderOriginState string `xml:"orderOriginState,omitempty"`

	OrderOriginPostalCode string `xml:"orderOriginPostalCode,omitempty"`

	SellerRegistration string `xml:"sellerRegistration,omitempty"`

	SellerRegistration0 string `xml:"sellerRegistration0,omitempty"`

	SellerRegistration1 string `xml:"sellerRegistration1,omitempty"`

	SellerRegistration2 string `xml:"sellerRegistration2,omitempty"`

	SellerRegistration3 string `xml:"sellerRegistration3,omitempty"`

	SellerRegistration4 string `xml:"sellerRegistration4,omitempty"`

	SellerRegistration5 string `xml:"sellerRegistration5,omitempty"`

	SellerRegistration6 string `xml:"sellerRegistration6,omitempty"`

	SellerRegistration7 string `xml:"sellerRegistration7,omitempty"`

	SellerRegistration8 string `xml:"sellerRegistration8,omitempty"`

	SellerRegistration9 string `xml:"sellerRegistration9,omitempty"`

	BuyerRegistration string `xml:"buyerRegistration,omitempty"`

	MiddlemanRegistration string `xml:"middlemanRegistration,omitempty"`

	PointOfTitleTransfer string `xml:"pointOfTitleTransfer,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type DMEService struct {
	EventType string `xml:"eventType,omitempty"`

	EventPolicy string `xml:"eventPolicy,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type AFSService struct {
	AvsCode string `xml:"avsCode,omitempty"`

	CvCode string `xml:"cvCode,omitempty"`

	DisableAVSScoring bool `xml:"disableAVSScoring,omitempty"`

	CustomRiskModel string `xml:"customRiskModel,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type DAVService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type ExportService struct {
	AddressOperator string `xml:"addressOperator,omitempty"`

	AddressWeight string `xml:"addressWeight,omitempty"`

	CompanyWeight string `xml:"companyWeight,omitempty"`

	NameWeight string `xml:"nameWeight,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type FXRatesService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type BankTransferService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type BankTransferRefundService struct {
	BankTransferRequestID string `xml:"bankTransferRequestID,omitempty"`

	BankTransferRealTimeRequestID string `xml:"bankTransferRealTimeRequestID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	BankTransferRealTimeReconciliationID string `xml:"bankTransferRealTimeReconciliationID,omitempty"`

	BankTransferRequestToken string `xml:"bankTransferRequestToken,omitempty"`

	BankTransferRealTimeRequestToken string `xml:"bankTransferRealTimeRequestToken,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type BankTransferRealTimeService struct {
	BankTransferRealTimeType string `xml:"bankTransferRealTimeType,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type DirectDebitMandateService struct {
	MandateDescriptor string `xml:"mandateDescriptor,omitempty"`

	FirstDebitDate string `xml:"firstDebitDate,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type DirectDebitService struct {
	DateCollect string `xml:"dateCollect,omitempty"`

	DirectDebitText string `xml:"directDebitText,omitempty"`

	AuthorizationID string `xml:"authorizationID,omitempty"`

	TransactionType string `xml:"transactionType,omitempty"`

	DirectDebitType string `xml:"directDebitType,omitempty"`

	ValidateRequestID string `xml:"validateRequestID,omitempty"`

	RecurringType string `xml:"recurringType,omitempty"`

	MandateID string `xml:"mandateID,omitempty"`

	ValidateRequestToken string `xml:"validateRequestToken,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	MandateAuthenticationDate string `xml:"mandateAuthenticationDate,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type DirectDebitRefundService struct {
	DirectDebitRequestID string `xml:"directDebitRequestID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	DirectDebitRequestToken string `xml:"directDebitRequestToken,omitempty"`

	DirectDebitType string `xml:"directDebitType,omitempty"`

	RecurringType string `xml:"recurringType,omitempty"`

	MandateID string `xml:"mandateID,omitempty"`

	MandateAuthenticationDate string `xml:"mandateAuthenticationDate,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type DirectDebitValidateService struct {
	DirectDebitValidateText string `xml:"directDebitValidateText,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PaySubscriptionCreateService struct {
	PaymentRequestID string `xml:"paymentRequestID,omitempty"`

	PaymentRequestToken string `xml:"paymentRequestToken,omitempty"`

	DisableAutoAuth bool `xml:"disableAutoAuth,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PaySubscriptionUpdateService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type PaySubscriptionEventUpdateService struct {
	Action string `xml:"action,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PaySubscriptionRetrieveService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type PaySubscriptionDeleteService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type PayPalPaymentService struct {
	CancelURL string `xml:"cancelURL,omitempty"`

	SuccessURL string `xml:"successURL,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalCreditService struct {
	PayPalPaymentRequestID string `xml:"payPalPaymentRequestID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PayPalPaymentRequestToken string `xml:"payPalPaymentRequestToken,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalEcSetService struct {
	PaypalReturn string `xml:"paypalReturn,omitempty"`

	PaypalCancelReturn string `xml:"paypalCancelReturn,omitempty"`

	PaypalMaxamt string `xml:"paypalMaxamt,omitempty"`

	PaypalCustomerEmail string `xml:"paypalCustomerEmail,omitempty"`

	PaypalDesc string `xml:"paypalDesc,omitempty"`

	PaypalReqconfirmshipping string `xml:"paypalReqconfirmshipping,omitempty"`

	PaypalNoshipping string `xml:"paypalNoshipping,omitempty"`

	PaypalAddressOverride string `xml:"paypalAddressOverride,omitempty"`

	PaypalToken string `xml:"paypalToken,omitempty"`

	PaypalLc string `xml:"paypalLc,omitempty"`

	PaypalPagestyle string `xml:"paypalPagestyle,omitempty"`

	PaypalHdrimg string `xml:"paypalHdrimg,omitempty"`

	PaypalHdrbordercolor string `xml:"paypalHdrbordercolor,omitempty"`

	PaypalHdrbackcolor string `xml:"paypalHdrbackcolor,omitempty"`

	PaypalPayflowcolor string `xml:"paypalPayflowcolor,omitempty"`

	PaypalEcSetRequestID string `xml:"paypalEcSetRequestID,omitempty"`

	PaypalEcSetRequestToken string `xml:"paypalEcSetRequestToken,omitempty"`

	PromoCode0 string `xml:"promoCode0,omitempty"`

	RequestBillingAddress string `xml:"requestBillingAddress,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	PaypalBillingType string `xml:"paypalBillingType,omitempty"`

	PaypalBillingAgreementDesc string `xml:"paypalBillingAgreementDesc,omitempty"`

	PaypalPaymentType string `xml:"paypalPaymentType,omitempty"`

	PaypalBillingAgreementCustom string `xml:"paypalBillingAgreementCustom,omitempty"`

	PaypalLogoimg string `xml:"paypalLogoimg,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalEcGetDetailsService struct {
	PaypalToken string `xml:"paypalToken,omitempty"`

	PaypalEcSetRequestID string `xml:"paypalEcSetRequestID,omitempty"`

	PaypalEcSetRequestToken string `xml:"paypalEcSetRequestToken,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalEcDoPaymentService struct {
	PaypalToken string `xml:"paypalToken,omitempty"`

	PaypalPayerId string `xml:"paypalPayerId,omitempty"`

	PaypalCustomerEmail string `xml:"paypalCustomerEmail,omitempty"`

	PaypalDesc string `xml:"paypalDesc,omitempty"`

	PaypalEcSetRequestID string `xml:"paypalEcSetRequestID,omitempty"`

	PaypalEcSetRequestToken string `xml:"paypalEcSetRequestToken,omitempty"`

	PromoCode0 string `xml:"promoCode0,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalDoCaptureService struct {
	PaypalAuthorizationId string `xml:"paypalAuthorizationId,omitempty"`

	CompleteType string `xml:"completeType,omitempty"`

	PaypalEcDoPaymentRequestID string `xml:"paypalEcDoPaymentRequestID,omitempty"`

	PaypalEcDoPaymentRequestToken string `xml:"paypalEcDoPaymentRequestToken,omitempty"`

	PaypalAuthorizationRequestID string `xml:"paypalAuthorizationRequestID,omitempty"`

	PaypalAuthorizationRequestToken string `xml:"paypalAuthorizationRequestToken,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalAuthReversalService struct {
	PaypalAuthorizationId string `xml:"paypalAuthorizationId,omitempty"`

	PaypalEcDoPaymentRequestID string `xml:"paypalEcDoPaymentRequestID,omitempty"`

	PaypalEcDoPaymentRequestToken string `xml:"paypalEcDoPaymentRequestToken,omitempty"`

	PaypalAuthorizationRequestID string `xml:"paypalAuthorizationRequestID,omitempty"`

	PaypalAuthorizationRequestToken string `xml:"paypalAuthorizationRequestToken,omitempty"`

	PaypalEcOrderSetupRequestID string `xml:"paypalEcOrderSetupRequestID,omitempty"`

	PaypalEcOrderSetupRequestToken string `xml:"paypalEcOrderSetupRequestToken,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalRefundService struct {
	PaypalDoCaptureRequestID string `xml:"paypalDoCaptureRequestID,omitempty"`

	PaypalDoCaptureRequestToken string `xml:"paypalDoCaptureRequestToken,omitempty"`

	PaypalCaptureId string `xml:"paypalCaptureId,omitempty"`

	PaypalNote string `xml:"paypalNote,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalEcOrderSetupService struct {
	PaypalToken string `xml:"paypalToken,omitempty"`

	PaypalPayerId string `xml:"paypalPayerId,omitempty"`

	PaypalCustomerEmail string `xml:"paypalCustomerEmail,omitempty"`

	PaypalDesc string `xml:"paypalDesc,omitempty"`

	PaypalEcSetRequestID string `xml:"paypalEcSetRequestID,omitempty"`

	PaypalEcSetRequestToken string `xml:"paypalEcSetRequestToken,omitempty"`

	PromoCode0 string `xml:"promoCode0,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalAuthorizationService struct {
	PaypalOrderId string `xml:"paypalOrderId,omitempty"`

	PaypalEcOrderSetupRequestID string `xml:"paypalEcOrderSetupRequestID,omitempty"`

	PaypalEcOrderSetupRequestToken string `xml:"paypalEcOrderSetupRequestToken,omitempty"`

	PaypalDoRefTransactionRequestID string `xml:"paypalDoRefTransactionRequestID,omitempty"`

	PaypalDoRefTransactionRequestToken string `xml:"paypalDoRefTransactionRequestToken,omitempty"`

	PaypalCustomerEmail string `xml:"paypalCustomerEmail,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalUpdateAgreementService struct {
	PaypalBillingAgreementId string `xml:"paypalBillingAgreementId,omitempty"`

	PaypalBillingAgreementStatus string `xml:"paypalBillingAgreementStatus,omitempty"`

	PaypalBillingAgreementDesc string `xml:"paypalBillingAgreementDesc,omitempty"`

	PaypalBillingAgreementCustom string `xml:"paypalBillingAgreementCustom,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalCreateAgreementService struct {
	PaypalToken string `xml:"paypalToken,omitempty"`

	PaypalEcSetRequestID string `xml:"paypalEcSetRequestID,omitempty"`

	PaypalEcSetRequestToken string `xml:"paypalEcSetRequestToken,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalDoRefTransactionService struct {
	PaypalBillingAgreementId string `xml:"paypalBillingAgreementId,omitempty"`

	PaypalPaymentType string `xml:"paypalPaymentType,omitempty"`

	PaypalReqconfirmshipping string `xml:"paypalReqconfirmshipping,omitempty"`

	PaypalReturnFmfDetails string `xml:"paypalReturnFmfDetails,omitempty"`

	PaypalSoftDescriptor string `xml:"paypalSoftDescriptor,omitempty"`

	PaypalShippingdiscount string `xml:"paypalShippingdiscount,omitempty"`

	PaypalDesc string `xml:"paypalDesc,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	PaypalEcNotifyUrl string `xml:"paypalEcNotifyUrl,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type VoidService struct {
	VoidRequestID string `xml:"voidRequestID,omitempty"`

	VoidRequestToken string `xml:"voidRequestToken,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PinlessDebitService struct {
	ReconciliationID string `xml:"reconciliationID,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PinlessDebitValidateService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type PinlessDebitReversalService struct {
	PinlessDebitRequestID string `xml:"pinlessDebitRequestID,omitempty"`

	PinlessDebitRequestToken string `xml:"pinlessDebitRequestToken,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PinDebitPurchaseService struct {
	NetworkOrder string `xml:"networkOrder,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PartialAuthIndicator bool `xml:"partialAuthIndicator,omitempty"`

	OverridePaymentMethod string `xml:"overridePaymentMethod,omitempty"`

	PaymentType string `xml:"paymentType,omitempty"`

	EbtCategory string `xml:"ebtCategory,omitempty"`

	TransactionType string `xml:"transactionType,omitempty"`

	EbtVoucherSerialNumber string `xml:"ebtVoucherSerialNumber,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PinDebitCreditService struct {
	NetworkOrder string `xml:"networkOrder,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	OverridePaymentMethod string `xml:"overridePaymentMethod,omitempty"`

	PaymentType string `xml:"paymentType,omitempty"`

	EbtCategory string `xml:"ebtCategory,omitempty"`

	TransactionType string `xml:"transactionType,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PinDebitReversalService struct {
	PinDebitRequestID string `xml:"pinDebitRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalButtonCreateService struct {
	ButtonType string `xml:"buttonType,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalPreapprovedPaymentService struct {
	MpID string `xml:"mpID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalPreapprovedUpdateService struct {
	MpID string `xml:"mpID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type ChinaPaymentService struct {
	PaymentMode string `xml:"paymentMode,omitempty"`

	ReturnURL string `xml:"returnURL,omitempty"`

	PickUpAddress string `xml:"pickUpAddress,omitempty"`

	PickUpPhoneNumber string `xml:"pickUpPhoneNumber,omitempty"`

	PickUpPostalCode string `xml:"pickUpPostalCode,omitempty"`

	PickUpName string `xml:"pickUpName,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type ChinaRefundService struct {
	ChinaPaymentRequestID string `xml:"chinaPaymentRequestID,omitempty"`

	ChinaPaymentRequestToken string `xml:"chinaPaymentRequestToken,omitempty"`

	RefundReason string `xml:"refundReason,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type BoletoPaymentService struct {
	Instruction string `xml:"instruction,omitempty"`

	ExpirationDate string `xml:"expirationDate,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type Address struct {
	Street1 string `xml:"street1,omitempty"`

	Street2 string `xml:"street2,omitempty"`

	City string `xml:"city,omitempty"`

	State string `xml:"state,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	Country string `xml:"country,omitempty"`
}

type APInitiateService struct {
	ReturnURL string `xml:"returnURL,omitempty"`

	ProductName string `xml:"productName,omitempty"`

	ProductDescription string `xml:"productDescription,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	BankID string `xml:"bankID,omitempty"`

	CountryCode string `xml:"countryCode,omitempty"`

	EscrowAgreement string `xml:"escrowAgreement,omitempty"`

	LanguageInterface string `xml:"languageInterface,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type APCheckStatusService struct {
	ApInitiateRequestID string `xml:"apInitiateRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type RiskUpdateService struct {
	ActionCode string `xml:"actionCode,omitempty"`

	RecordID string `xml:"recordID,omitempty"`

	RecordName string `xml:"recordName,omitempty"`

	NegativeAddress *Address `xml:"negativeAddress,omitempty"`

	MarkingReason string `xml:"markingReason,omitempty"`

	MarkingNotes string `xml:"markingNotes,omitempty"`

	MarkingRequestID string `xml:"markingRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type FraudUpdateService struct {
	ActionCode string `xml:"actionCode,omitempty"`

	MarkedData string `xml:"markedData,omitempty"`

	MarkingReason string `xml:"markingReason,omitempty"`

	MarkingNotes string `xml:"markingNotes,omitempty"`

	MarkingRequestID string `xml:"markingRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type CaseManagementActionService struct {
	ActionCode string `xml:"actionCode,omitempty"`

	RequestID string `xml:"requestID,omitempty"`

	Comments string `xml:"comments,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type EncryptPaymentDataService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type InvoiceHeader struct {
	MerchantDescriptor string `xml:"merchantDescriptor,omitempty"`

	MerchantDescriptorContact string `xml:"merchantDescriptorContact,omitempty"`

	MerchantDescriptorAlternate string `xml:"merchantDescriptorAlternate,omitempty"`

	MerchantDescriptorStreet string `xml:"merchantDescriptorStreet,omitempty"`

	MerchantDescriptorCity string `xml:"merchantDescriptorCity,omitempty"`

	MerchantDescriptorState string `xml:"merchantDescriptorState,omitempty"`

	MerchantDescriptorPostalCode string `xml:"merchantDescriptorPostalCode,omitempty"`

	MerchantDescriptorCountry string `xml:"merchantDescriptorCountry,omitempty"`

	IsGift bool `xml:"isGift,omitempty"`

	ReturnsAccepted bool `xml:"returnsAccepted,omitempty"`

	TenderType string `xml:"tenderType,omitempty"`

	MerchantVATRegistrationNumber string `xml:"merchantVATRegistrationNumber,omitempty"`

	PurchaserOrderDate string `xml:"purchaserOrderDate,omitempty"`

	PurchaserVATRegistrationNumber string `xml:"purchaserVATRegistrationNumber,omitempty"`

	VatInvoiceReferenceNumber string `xml:"vatInvoiceReferenceNumber,omitempty"`

	SummaryCommodityCode string `xml:"summaryCommodityCode,omitempty"`

	SupplierOrderReference string `xml:"supplierOrderReference,omitempty"`

	UserPO string `xml:"userPO,omitempty"`

	CostCenter string `xml:"costCenter,omitempty"`

	PurchaserCode string `xml:"purchaserCode,omitempty"`

	Taxable bool `xml:"taxable,omitempty"`

	AmexDataTAA1 string `xml:"amexDataTAA1,omitempty"`

	AmexDataTAA2 string `xml:"amexDataTAA2,omitempty"`

	AmexDataTAA3 string `xml:"amexDataTAA3,omitempty"`

	AmexDataTAA4 string `xml:"amexDataTAA4,omitempty"`

	InvoiceDate string `xml:"invoiceDate,omitempty"`

	TotalTaxTypeCode string `xml:"totalTaxTypeCode,omitempty"`

	CardAcceptorRefNumber string `xml:"cardAcceptorRefNumber,omitempty"`

	AuthorizedContactName string `xml:"authorizedContactName,omitempty"`

	BusinessApplicationID string `xml:"businessApplicationID,omitempty"`
}

type BusinessRules struct {
	IgnoreAVSResult bool `xml:"ignoreAVSResult,omitempty"`

	IgnoreCVResult bool `xml:"ignoreCVResult,omitempty"`

	IgnoreDAVResult bool `xml:"ignoreDAVResult,omitempty"`

	IgnoreExportResult bool `xml:"ignoreExportResult,omitempty"`

	IgnoreValidateResult bool `xml:"ignoreValidateResult,omitempty"`

	DeclineAVSFlags string `xml:"declineAVSFlags,omitempty"`

	ScoreThreshold int32 `xml:"scoreThreshold,omitempty"`
}

type BillTo struct {
	Title string `xml:"title,omitempty"`

	FirstName string `xml:"firstName,omitempty"`

	MiddleName string `xml:"middleName,omitempty"`

	LastName string `xml:"lastName,omitempty"`

	Suffix string `xml:"suffix,omitempty"`

	BuildingNumber string `xml:"buildingNumber,omitempty"`

	Street1 string `xml:"street1,omitempty"`

	Street2 string `xml:"street2,omitempty"`

	Street3 string `xml:"street3,omitempty"`

	Street4 string `xml:"street4,omitempty"`

	City string `xml:"city,omitempty"`

	District string `xml:"district,omitempty"`

	County string `xml:"county,omitempty"`

	State string `xml:"state,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	Country string `xml:"country,omitempty"`

	Company string `xml:"company,omitempty"`

	CompanyTaxID string `xml:"companyTaxID,omitempty"`

	PhoneNumber string `xml:"phoneNumber,omitempty"`

	Email string `xml:"email,omitempty"`

	IpAddress string `xml:"ipAddress,omitempty"`

	CustomerUserName string `xml:"customerUserName,omitempty"`

	CustomerPassword string `xml:"customerPassword,omitempty"`

	IpNetworkAddress string `xml:"ipNetworkAddress,omitempty"`

	Hostname string `xml:"hostname,omitempty"`

	DomainName string `xml:"domainName,omitempty"`

	DateOfBirth string `xml:"dateOfBirth,omitempty"`

	DriversLicenseNumber string `xml:"driversLicenseNumber,omitempty"`

	DriversLicenseState string `xml:"driversLicenseState,omitempty"`

	Ssn string `xml:"ssn,omitempty"`

	CustomerID string `xml:"customerID,omitempty"`

	HttpBrowserType string `xml:"httpBrowserType,omitempty"`

	HttpBrowserEmail string `xml:"httpBrowserEmail,omitempty"`

	HttpBrowserCookiesAccepted bool `xml:"httpBrowserCookiesAccepted,omitempty"`

	Nif string `xml:"nif,omitempty"`

	PersonalID string `xml:"personalID,omitempty"`

	Language string `xml:"language,omitempty"`

	Name string `xml:"name,omitempty"`
}

type ShipTo struct {
	Title string `xml:"title,omitempty"`

	FirstName string `xml:"firstName,omitempty"`

	MiddleName string `xml:"middleName,omitempty"`

	LastName string `xml:"lastName,omitempty"`

	Suffix string `xml:"suffix,omitempty"`

	Street1 string `xml:"street1,omitempty"`

	Street2 string `xml:"street2,omitempty"`

	Street3 string `xml:"street3,omitempty"`

	Street4 string `xml:"street4,omitempty"`

	City string `xml:"city,omitempty"`

	County string `xml:"county,omitempty"`

	State string `xml:"state,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	Country string `xml:"country,omitempty"`

	Company string `xml:"company,omitempty"`

	PhoneNumber string `xml:"phoneNumber,omitempty"`

	Email string `xml:"email,omitempty"`

	ShippingMethod string `xml:"shippingMethod,omitempty"`

	Name string `xml:"name,omitempty"`

	Id string `xml:"id,omitempty"`

	AddressVerificationStatus string `xml:"addressVerificationStatus,omitempty"`
}

type ShipFrom struct {
	Title string `xml:"title,omitempty"`

	FirstName string `xml:"firstName,omitempty"`

	MiddleName string `xml:"middleName,omitempty"`

	LastName string `xml:"lastName,omitempty"`

	Suffix string `xml:"suffix,omitempty"`

	Street1 string `xml:"street1,omitempty"`

	Street2 string `xml:"street2,omitempty"`

	Street3 string `xml:"street3,omitempty"`

	Street4 string `xml:"street4,omitempty"`

	City string `xml:"city,omitempty"`

	County string `xml:"county,omitempty"`

	State string `xml:"state,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	Country string `xml:"country,omitempty"`

	Company string `xml:"company,omitempty"`

	PhoneNumber string `xml:"phoneNumber,omitempty"`

	Email string `xml:"email,omitempty"`
}

type Card struct {
	FullName string `xml:"fullName,omitempty"`

	AccountNumber string `xml:"accountNumber,omitempty"`

	ExpirationMonth int32 `xml:"expirationMonth,omitempty"`

	ExpirationYear int32 `xml:"expirationYear,omitempty"`

	CvIndicator string `xml:"cvIndicator,omitempty"`

	CvNumber string `xml:"cvNumber,omitempty"`

	CardType string `xml:"cardType,omitempty"`

	IssueNumber string `xml:"issueNumber,omitempty"`

	StartMonth int32 `xml:"startMonth,omitempty"`

	StartYear int32 `xml:"startYear,omitempty"`

	Pin string `xml:"pin,omitempty"`

	AccountEncoderID string `xml:"accountEncoderID,omitempty"`

	Bin string `xml:"bin,omitempty"`

	EncryptedData string `xml:"encryptedData,omitempty"`

	Suffix string `xml:"suffix,omitempty"`

	Prefix string `xml:"prefix,omitempty"`
}

type Check struct {
	FullName string `xml:"fullName,omitempty"`

	AccountNumber string `xml:"accountNumber,omitempty"`

	AccountType string `xml:"accountType,omitempty"`

	BankTransitNumber string `xml:"bankTransitNumber,omitempty"`

	CheckNumber string `xml:"checkNumber,omitempty"`

	SecCode string `xml:"secCode,omitempty"`

	AccountEncoderID string `xml:"accountEncoderID,omitempty"`

	AuthenticateID string `xml:"authenticateID,omitempty"`

	PaymentInfo string `xml:"paymentInfo,omitempty"`

	ImageReferenceNumber string `xml:"imageReferenceNumber,omitempty"`

	TerminalCity string `xml:"terminalCity,omitempty"`

	TerminalState string `xml:"terminalState,omitempty"`
}

type BML struct {
	CustomerBillingAddressChange bool `xml:"customerBillingAddressChange,omitempty"`

	CustomerEmailChange bool `xml:"customerEmailChange,omitempty"`

	CustomerHasCheckingAccount bool `xml:"customerHasCheckingAccount,omitempty"`

	CustomerHasSavingsAccount bool `xml:"customerHasSavingsAccount,omitempty"`

	CustomerPasswordChange bool `xml:"customerPasswordChange,omitempty"`

	CustomerPhoneChange bool `xml:"customerPhoneChange,omitempty"`

	CustomerRegistrationDate string `xml:"customerRegistrationDate,omitempty"`

	CustomerTypeFlag string `xml:"customerTypeFlag,omitempty"`

	GrossHouseholdIncome *Amount `xml:"grossHouseholdIncome,omitempty"`

	HouseholdIncomeCurrency string `xml:"householdIncomeCurrency,omitempty"`

	ItemCategory string `xml:"itemCategory,omitempty"`

	MerchantPromotionCode string `xml:"merchantPromotionCode,omitempty"`

	PreapprovalNumber string `xml:"preapprovalNumber,omitempty"`

	ProductDeliveryTypeIndicator string `xml:"productDeliveryTypeIndicator,omitempty"`

	ResidenceStatus string `xml:"residenceStatus,omitempty"`

	TcVersion string `xml:"tcVersion,omitempty"`

	YearsAtCurrentResidence int32 `xml:"yearsAtCurrentResidence,omitempty"`

	YearsWithCurrentEmployer int32 `xml:"yearsWithCurrentEmployer,omitempty"`

	EmployerStreet1 string `xml:"employerStreet1,omitempty"`

	EmployerStreet2 string `xml:"employerStreet2,omitempty"`

	EmployerCity string `xml:"employerCity,omitempty"`

	EmployerCompanyName string `xml:"employerCompanyName,omitempty"`

	EmployerCountry string `xml:"employerCountry,omitempty"`

	EmployerPhoneNumber string `xml:"employerPhoneNumber,omitempty"`

	EmployerPhoneType string `xml:"employerPhoneType,omitempty"`

	EmployerState string `xml:"employerState,omitempty"`

	EmployerPostalCode string `xml:"employerPostalCode,omitempty"`

	ShipToPhoneType string `xml:"shipToPhoneType,omitempty"`

	BillToPhoneType string `xml:"billToPhoneType,omitempty"`

	MethodOfPayment string `xml:"methodOfPayment,omitempty"`

	ProductType string `xml:"productType,omitempty"`

	CustomerAuthenticatedByMerchant string `xml:"customerAuthenticatedByMerchant,omitempty"`

	BackOfficeIndicator string `xml:"backOfficeIndicator,omitempty"`

	ShipToEqualsBillToNameIndicator string `xml:"shipToEqualsBillToNameIndicator,omitempty"`

	ShipToEqualsBillToAddressIndicator string `xml:"shipToEqualsBillToAddressIndicator,omitempty"`

	AlternateIPAddress string `xml:"alternateIPAddress,omitempty"`

	BusinessLegalName string `xml:"businessLegalName,omitempty"`

	DbaName string `xml:"dbaName,omitempty"`

	BusinessAddress1 string `xml:"businessAddress1,omitempty"`

	BusinessAddress2 string `xml:"businessAddress2,omitempty"`

	BusinessCity string `xml:"businessCity,omitempty"`

	BusinessState string `xml:"businessState,omitempty"`

	BusinessPostalCode string `xml:"businessPostalCode,omitempty"`

	BusinessCountry string `xml:"businessCountry,omitempty"`

	BusinessMainPhone string `xml:"businessMainPhone,omitempty"`

	UserID string `xml:"userID,omitempty"`

	Pin string `xml:"pin,omitempty"`

	AdminLastName string `xml:"adminLastName,omitempty"`

	AdminFirstName string `xml:"adminFirstName,omitempty"`

	AdminPhone string `xml:"adminPhone,omitempty"`

	AdminFax string `xml:"adminFax,omitempty"`

	AdminEmailAddress string `xml:"adminEmailAddress,omitempty"`

	AdminTitle string `xml:"adminTitle,omitempty"`

	SupervisorLastName string `xml:"supervisorLastName,omitempty"`

	SupervisorFirstName string `xml:"supervisorFirstName,omitempty"`

	SupervisorEmailAddress string `xml:"supervisorEmailAddress,omitempty"`

	BusinessDAndBNumber string `xml:"businessDAndBNumber,omitempty"`

	BusinessTaxID string `xml:"businessTaxID,omitempty"`

	BusinessNAICSCode string `xml:"businessNAICSCode,omitempty"`

	BusinessType string `xml:"businessType,omitempty"`

	BusinessYearsInBusiness string `xml:"businessYearsInBusiness,omitempty"`

	BusinessNumberOfEmployees string `xml:"businessNumberOfEmployees,omitempty"`

	BusinessPONumber string `xml:"businessPONumber,omitempty"`

	BusinessLoanType string `xml:"businessLoanType,omitempty"`

	BusinessApplicationID string `xml:"businessApplicationID,omitempty"`

	BusinessProductCode string `xml:"businessProductCode,omitempty"`

	PgLastName string `xml:"pgLastName,omitempty"`

	PgFirstName string `xml:"pgFirstName,omitempty"`

	PgSSN string `xml:"pgSSN,omitempty"`

	PgDateOfBirth string `xml:"pgDateOfBirth,omitempty"`

	PgAnnualIncome string `xml:"pgAnnualIncome,omitempty"`

	PgIncomeCurrencyType string `xml:"pgIncomeCurrencyType,omitempty"`

	PgResidenceStatus string `xml:"pgResidenceStatus,omitempty"`

	PgCheckingAccountIndicator string `xml:"pgCheckingAccountIndicator,omitempty"`

	PgSavingsAccountIndicator string `xml:"pgSavingsAccountIndicator,omitempty"`

	PgYearsAtEmployer string `xml:"pgYearsAtEmployer,omitempty"`

	PgYearsAtResidence string `xml:"pgYearsAtResidence,omitempty"`

	PgHomeAddress1 string `xml:"pgHomeAddress1,omitempty"`

	PgHomeAddress2 string `xml:"pgHomeAddress2,omitempty"`

	PgHomeCity string `xml:"pgHomeCity,omitempty"`

	PgHomeState string `xml:"pgHomeState,omitempty"`

	PgHomePostalCode string `xml:"pgHomePostalCode,omitempty"`

	PgHomeCountry string `xml:"pgHomeCountry,omitempty"`

	PgEmailAddress string `xml:"pgEmailAddress,omitempty"`

	PgHomePhone string `xml:"pgHomePhone,omitempty"`

	PgTitle string `xml:"pgTitle,omitempty"`
}

type OtherTax struct {
	VatTaxAmount *Amount `xml:"vatTaxAmount,omitempty"`

	VatTaxRate *Amount `xml:"vatTaxRate,omitempty"`

	VatTaxAmountSign string `xml:"vatTaxAmountSign,omitempty"`

	AlternateTaxAmount *Amount `xml:"alternateTaxAmount,omitempty"`

	AlternateTaxIndicator string `xml:"alternateTaxIndicator,omitempty"`

	AlternateTaxID string `xml:"alternateTaxID,omitempty"`

	LocalTaxAmount *Amount `xml:"localTaxAmount,omitempty"`

	LocalTaxIndicator int32 `xml:"localTaxIndicator,omitempty"`

	NationalTaxAmount *Amount `xml:"nationalTaxAmount,omitempty"`

	NationalTaxIndicator int32 `xml:"nationalTaxIndicator,omitempty"`
}

type Aft struct {
	Indicator string `xml:"indicator,omitempty"`

	ServiceFee string `xml:"serviceFee,omitempty"`

	ForeignExchangeFee string `xml:"foreignExchangeFee,omitempty"`
}

type Wallet struct {
	Type_ string `xml:"type,omitempty"`
}

type PurchaseTotals struct {
	Currency string `xml:"currency,omitempty"`

	DiscountAmount *Amount `xml:"discountAmount,omitempty"`

	DiscountAmountSign string `xml:"discountAmountSign,omitempty"`

	DiscountManagementIndicator string `xml:"discountManagementIndicator,omitempty"`

	TaxAmount *Amount `xml:"taxAmount,omitempty"`

	DutyAmount *Amount `xml:"dutyAmount,omitempty"`

	DutyAmountSign string `xml:"dutyAmountSign,omitempty"`

	GrandTotalAmount *Amount `xml:"grandTotalAmount,omitempty"`

	FreightAmount *Amount `xml:"freightAmount,omitempty"`

	FreightAmountSign string `xml:"freightAmountSign,omitempty"`

	ForeignAmount *Amount `xml:"foreignAmount,omitempty"`

	ForeignCurrency string `xml:"foreignCurrency,omitempty"`

	OriginalAmount *Amount `xml:"originalAmount,omitempty"`

	OriginalCurrency string `xml:"originalCurrency,omitempty"`

	ExchangeRate *Amount `xml:"exchangeRate,omitempty"`

	ExchangeRateTimeStamp string `xml:"exchangeRateTimeStamp,omitempty"`

	AdditionalAmountType0 string `xml:"additionalAmountType0,omitempty"`

	AdditionalAmount0 string `xml:"additionalAmount0,omitempty"`

	AdditionalAmountType1 string `xml:"additionalAmountType1,omitempty"`

	AdditionalAmount1 string `xml:"additionalAmount1,omitempty"`

	AdditionalAmountType2 string `xml:"additionalAmountType2,omitempty"`

	AdditionalAmount2 string `xml:"additionalAmount2,omitempty"`

	AdditionalAmountType3 string `xml:"additionalAmountType3,omitempty"`

	AdditionalAmount3 string `xml:"additionalAmount3,omitempty"`

	AdditionalAmountType4 string `xml:"additionalAmountType4,omitempty"`

	AdditionalAmount4 string `xml:"additionalAmount4,omitempty"`

	ServiceFeeAmount *Amount `xml:"serviceFeeAmount,omitempty"`
}

type FundingTotals struct {
	Currency string `xml:"currency,omitempty"`

	GrandTotalAmount *Amount `xml:"grandTotalAmount,omitempty"`
}

type GECC struct {
	SaleType string `xml:"saleType,omitempty"`

	PlanNumber string `xml:"planNumber,omitempty"`

	SequenceNumber string `xml:"sequenceNumber,omitempty"`

	PromotionEndDate string `xml:"promotionEndDate,omitempty"`

	PromotionPlan string `xml:"promotionPlan,omitempty"`

	Line string `xml:"line,omitempty"`
}

type UCAF struct {
	AuthenticationData string `xml:"authenticationData,omitempty"`

	CollectionIndicator string `xml:"collectionIndicator,omitempty"`
}

type FundTransfer struct {
	AccountNumber string `xml:"accountNumber,omitempty"`

	AccountName string `xml:"accountName,omitempty"`

	BankCheckDigit string `xml:"bankCheckDigit,omitempty"`

	Iban string `xml:"iban,omitempty"`
}

type BankInfo struct {
	BankCode string `xml:"bankCode,omitempty"`

	Name string `xml:"name,omitempty"`

	Address string `xml:"address,omitempty"`

	City string `xml:"city,omitempty"`

	Country string `xml:"country,omitempty"`

	BranchCode string `xml:"branchCode,omitempty"`

	SwiftCode string `xml:"swiftCode,omitempty"`

	SortCode string `xml:"sortCode,omitempty"`

	IssuerID string `xml:"issuerID,omitempty"`
}

type RecurringSubscriptionInfo struct {
	SubscriptionID string `xml:"subscriptionID,omitempty"`

	Status string `xml:"status,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	NumberOfPayments int32 `xml:"numberOfPayments,omitempty"`

	NumberOfPaymentsToAdd int32 `xml:"numberOfPaymentsToAdd,omitempty"`

	AutomaticRenew bool `xml:"automaticRenew,omitempty"`

	Frequency string `xml:"frequency,omitempty"`

	StartDate string `xml:"startDate,omitempty"`

	EndDate string `xml:"endDate,omitempty"`

	ApprovalRequired bool `xml:"approvalRequired,omitempty"`

	Event *PaySubscriptionEvent `xml:"event,omitempty"`

	BillPayment bool `xml:"billPayment,omitempty"`
}

type PaySubscriptionEvent struct {
	Amount *Amount `xml:"amount,omitempty"`

	ApprovedBy string `xml:"approvedBy,omitempty"`

	Number int32 `xml:"number,omitempty"`
}

type Subscription struct {
	Title string `xml:"title,omitempty"`

	PaymentMethod string `xml:"paymentMethod,omitempty"`
}

type PaymentNetworkToken struct {
	RequestorID string `xml:"requestorID,omitempty"`

	TransactionType string `xml:"transactionType,omitempty"`

	AssuranceLevel string `xml:"assuranceLevel,omitempty"`

	AccountStatus string `xml:"accountStatus,omitempty"`

	OriginalCardCategory string `xml:"originalCardCategory,omitempty"`
}

type DecisionManager struct {
	Enabled bool `xml:"enabled,omitempty"`

	Profile string `xml:"profile,omitempty"`

	TravelData *DecisionManagerTravelData `xml:"travelData,omitempty"`
}

type DecisionManagerTravelData struct {
	Leg *DecisionManagerTravelLeg `xml:"leg,omitempty"`

	DepartureDateTime string `xml:"departureDateTime,omitempty"`

	CompleteRoute string `xml:"completeRoute,omitempty"`

	JourneyType string `xml:"journeyType,omitempty"`
}

type DecisionManagerTravelLeg struct {
	Origin string `xml:"origin,omitempty"`

	Destination string `xml:"destination,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type Batch struct {
	BatchID string `xml:"batchID,omitempty"`

	RecordID string `xml:"recordID,omitempty"`
}

type PayPal struct {
}

type JPO struct {
	PaymentMethod int32 `xml:"paymentMethod,omitempty"`

	BonusAmount *Amount `xml:"bonusAmount,omitempty"`

	Bonuses int32 `xml:"bonuses,omitempty"`

	Installments int32 `xml:"installments,omitempty"`

	FirstBillingMonth int32 `xml:"firstBillingMonth,omitempty"`

	JccaTerminalID int32 `xml:"jccaTerminalID,omitempty"`

	IssuerMessage int32 `xml:"issuerMessage,omitempty"`
}

type AP struct {
	OrderID string `xml:"orderID,omitempty"`

	CustomerRepresentativeID string `xml:"customerRepresentativeID,omitempty"`

	ProductDescription string `xml:"productDescription,omitempty"`

	SettlementCurrency string `xml:"settlementCurrency,omitempty"`

	SubtotalAmount string `xml:"subtotalAmount,omitempty"`

	ShippingAmount string `xml:"shippingAmount,omitempty"`

	HandlingAmount string `xml:"handlingAmount,omitempty"`

	ShippingHandlingAmount string `xml:"shippingHandlingAmount,omitempty"`

	AdditionalAmount string `xml:"additionalAmount,omitempty"`

	TaxAmount string `xml:"taxAmount,omitempty"`

	GiftWrapAmount string `xml:"giftWrapAmount,omitempty"`

	DiscountAmount string `xml:"discountAmount,omitempty"`

	PurchaseID string `xml:"purchaseID,omitempty"`

	ProductID string `xml:"productID,omitempty"`
}

type APAuthService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type APAuthReversalService struct {
	AuthRequestID string `xml:"authRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type APCaptureService struct {
	AuthRequestID string `xml:"authRequestID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type APRefundService struct {
	CaptureRequestID string `xml:"captureRequestID,omitempty"`

	Reason string `xml:"reason,omitempty"`

	Note string `xml:"note,omitempty"`

	ApInitiateRequestID string `xml:"apInitiateRequestID,omitempty"`

	ReturnRef string `xml:"returnRef,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type APCheckOutDetailsService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type APTransactionDetailsService struct {
	TransactionDetailsRequestID string `xml:"transactionDetailsRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type APConfirmPurchaseService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type PayPalGetTxnDetailsService struct {
	TransactionID string `xml:"transactionID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type PayPalTransactionSearchService struct {
	StartDate string `xml:"startDate,omitempty"`

	EndDate string `xml:"endDate,omitempty"`

	PaypalCustomerEmail string `xml:"paypalCustomerEmail,omitempty"`

	PaypalReceiptId string `xml:"paypalReceiptId,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	GrandTotalAmount *Amount `xml:"grandTotalAmount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	PaymentStatus string `xml:"paymentStatus,omitempty"`

	PayerSalutation string `xml:"payerSalutation,omitempty"`

	PayerFirstname string `xml:"payerFirstname,omitempty"`

	PayerMiddlename string `xml:"payerMiddlename,omitempty"`

	PayerLastname string `xml:"payerLastname,omitempty"`

	PayerSuffix string `xml:"payerSuffix,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type Recipient struct {
	DateOfBirth string `xml:"dateOfBirth,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	AccountID string `xml:"accountID,omitempty"`

	LastName string `xml:"lastName,omitempty"`

	Name string `xml:"name,omitempty"`
}

type Sender struct {
	ReferenceNumber string `xml:"referenceNumber,omitempty"`

	SourceOfFunds string `xml:"sourceOfFunds,omitempty"`

	Name string `xml:"name,omitempty"`

	Address string `xml:"address,omitempty"`

	City string `xml:"city,omitempty"`

	State string `xml:"state,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	Country string `xml:"country,omitempty"`
}

type RequestMessage struct {
	XMLName xml.Name `xml:"urn:schemas-cybersource-com:transaction-data-1.120 requestMessage"`

	MerchantID string `xml:"merchantID,omitempty"`

	MerchantReferenceCode string `xml:"merchantReferenceCode,omitempty"`

	DebtIndicator bool `xml:"debtIndicator,omitempty"`

	ClientLibrary string `xml:"clientLibrary,omitempty"`

	ClientLibraryVersion string `xml:"clientLibraryVersion,omitempty"`

	ClientEnvironment string `xml:"clientEnvironment,omitempty"`

	ClientSecurityLibraryVersion string `xml:"clientSecurityLibraryVersion,omitempty"`

	ClientApplication string `xml:"clientApplication,omitempty"`

	ClientApplicationVersion string `xml:"clientApplicationVersion,omitempty"`

	ClientApplicationUser string `xml:"clientApplicationUser,omitempty"`

	RoutingCode string `xml:"routingCode,omitempty"`

	Comments string `xml:"comments,omitempty"`

	ReturnURL string `xml:"returnURL,omitempty"`

	InvoiceHeader *InvoiceHeader `xml:"invoiceHeader,omitempty"`

	AggregatorMerchantIdentifier string `xml:"aggregatorMerchantIdentifier,omitempty"`

	CustomerID string `xml:"customerID,omitempty"`

	CustomerFirstName string `xml:"customerFirstName,omitempty"`

	CustomerLastName string `xml:"customerLastName,omitempty"`

	BillTo *BillTo `xml:"billTo,omitempty"`

	ShipTo *ShipTo `xml:"shipTo,omitempty"`

	ShipFrom *ShipFrom `xml:"shipFrom,omitempty"`

	Item *Item `xml:"item,omitempty"`

	PurchaseTotals *PurchaseTotals `xml:"purchaseTotals,omitempty"`

	FundingTotals *FundingTotals `xml:"fundingTotals,omitempty"`

	Dcc *DCC `xml:"dcc,omitempty"`

	Pos *Pos `xml:"pos,omitempty"`

	EncryptedPayment *EncryptedPayment `xml:"encryptedPayment,omitempty"`

	Installment *Installment `xml:"installment,omitempty"`

	Card *Card `xml:"card,omitempty"`

	Check *Check `xml:"check,omitempty"`

	Bml *BML `xml:"bml,omitempty"`

	Gecc *GECC `xml:"gecc,omitempty"`

	Ucaf *UCAF `xml:"ucaf,omitempty"`

	FundTransfer *FundTransfer `xml:"fundTransfer,omitempty"`

	BankInfo *BankInfo `xml:"bankInfo,omitempty"`

	Subscription *Subscription `xml:"subscription,omitempty"`

	RecurringSubscriptionInfo *RecurringSubscriptionInfo `xml:"recurringSubscriptionInfo,omitempty"`

	DecisionManager *DecisionManager `xml:"decisionManager,omitempty"`

	OtherTax *OtherTax `xml:"otherTax,omitempty"`

	Paypal *PayPal `xml:"paypal,omitempty"`

	MerchantDefinedData *MerchantDefinedData `xml:"merchantDefinedData,omitempty"`

	MerchantSecureData *MerchantSecureData `xml:"merchantSecureData,omitempty"`

	Jpo *JPO `xml:"jpo,omitempty"`

	OrderRequestToken string `xml:"orderRequestToken,omitempty"`

	LinkToRequest string `xml:"linkToRequest,omitempty"`

	ServiceFee *ServiceFee `xml:"serviceFee,omitempty"`

	CcAuthService *CCAuthService `xml:"ccAuthService,omitempty"`

	OctService *OCTService `xml:"octService,omitempty"`

	CcSaleService *CCSaleService `xml:"ccSaleService,omitempty"`

	CcSaleCreditService *CCSaleCreditService `xml:"ccSaleCreditService,omitempty"`

	CcSaleReversalService *CCSaleReversalService `xml:"ccSaleReversalService,omitempty"`

	CcIncrementalAuthService *CCIncrementalAuthService `xml:"ccIncrementalAuthService,omitempty"`

	CcCaptureService *CCCaptureService `xml:"ccCaptureService,omitempty"`

	CcCreditService *CCCreditService `xml:"ccCreditService,omitempty"`

	CcAuthReversalService *CCAuthReversalService `xml:"ccAuthReversalService,omitempty"`

	CcAutoAuthReversalService *CCAutoAuthReversalService `xml:"ccAutoAuthReversalService,omitempty"`

	CcDCCService *CCDCCService `xml:"ccDCCService,omitempty"`

	ServiceFeeCalculateService *ServiceFeeCalculateService `xml:"serviceFeeCalculateService,omitempty"`

	EcDebitService *ECDebitService `xml:"ecDebitService,omitempty"`

	EcCreditService *ECCreditService `xml:"ecCreditService,omitempty"`

	EcAuthenticateService *ECAuthenticateService `xml:"ecAuthenticateService,omitempty"`

	PayerAuthEnrollService *PayerAuthEnrollService `xml:"payerAuthEnrollService,omitempty"`

	PayerAuthValidateService *PayerAuthValidateService `xml:"payerAuthValidateService,omitempty"`

	TaxService *TaxService `xml:"taxService,omitempty"`

	DmeService *DMEService `xml:"dmeService,omitempty"`

	AfsService *AFSService `xml:"afsService,omitempty"`

	DavService *DAVService `xml:"davService,omitempty"`

	ExportService *ExportService `xml:"exportService,omitempty"`

	FxRatesService *FXRatesService `xml:"fxRatesService,omitempty"`

	BankTransferService *BankTransferService `xml:"bankTransferService,omitempty"`

	BankTransferRefundService *BankTransferRefundService `xml:"bankTransferRefundService,omitempty"`

	BankTransferRealTimeService *BankTransferRealTimeService `xml:"bankTransferRealTimeService,omitempty"`

	DirectDebitMandateService *DirectDebitMandateService `xml:"directDebitMandateService,omitempty"`

	DirectDebitService *DirectDebitService `xml:"directDebitService,omitempty"`

	DirectDebitRefundService *DirectDebitRefundService `xml:"directDebitRefundService,omitempty"`

	DirectDebitValidateService *DirectDebitValidateService `xml:"directDebitValidateService,omitempty"`

	PaySubscriptionCreateService *PaySubscriptionCreateService `xml:"paySubscriptionCreateService,omitempty"`

	PaySubscriptionUpdateService *PaySubscriptionUpdateService `xml:"paySubscriptionUpdateService,omitempty"`

	PaySubscriptionEventUpdateService *PaySubscriptionEventUpdateService `xml:"paySubscriptionEventUpdateService,omitempty"`

	PaySubscriptionRetrieveService *PaySubscriptionRetrieveService `xml:"paySubscriptionRetrieveService,omitempty"`

	PaySubscriptionDeleteService *PaySubscriptionDeleteService `xml:"paySubscriptionDeleteService,omitempty"`

	PayPalPaymentService *PayPalPaymentService `xml:"payPalPaymentService,omitempty"`

	PayPalCreditService *PayPalCreditService `xml:"payPalCreditService,omitempty"`

	VoidService *VoidService `xml:"voidService,omitempty"`

	BusinessRules *BusinessRules `xml:"businessRules,omitempty"`

	PinlessDebitService *PinlessDebitService `xml:"pinlessDebitService,omitempty"`

	PinlessDebitValidateService *PinlessDebitValidateService `xml:"pinlessDebitValidateService,omitempty"`

	PinlessDebitReversalService *PinlessDebitReversalService `xml:"pinlessDebitReversalService,omitempty"`

	Batch *Batch `xml:"batch,omitempty"`

	AirlineData *AirlineData `xml:"airlineData,omitempty"`

	AncillaryData *AncillaryData `xml:"ancillaryData,omitempty"`

	LodgingData *LodgingData `xml:"lodgingData,omitempty"`

	PayPalButtonCreateService *PayPalButtonCreateService `xml:"payPalButtonCreateService,omitempty"`

	PayPalPreapprovedPaymentService *PayPalPreapprovedPaymentService `xml:"payPalPreapprovedPaymentService,omitempty"`

	PayPalPreapprovedUpdateService *PayPalPreapprovedUpdateService `xml:"payPalPreapprovedUpdateService,omitempty"`

	RiskUpdateService *RiskUpdateService `xml:"riskUpdateService,omitempty"`

	FraudUpdateService *FraudUpdateService `xml:"fraudUpdateService,omitempty"`

	CaseManagementActionService *CaseManagementActionService `xml:"caseManagementActionService,omitempty"`

	Reserved *RequestReserved `xml:"reserved,omitempty"`

	DeviceFingerprintID string `xml:"deviceFingerprintID,omitempty"`

	DeviceFingerprintRaw bool `xml:"deviceFingerprintRaw,omitempty"`

	DeviceFingerprintHash string `xml:"deviceFingerprintHash,omitempty"`

	PayPalRefundService *PayPalRefundService `xml:"payPalRefundService,omitempty"`

	PayPalAuthReversalService *PayPalAuthReversalService `xml:"payPalAuthReversalService,omitempty"`

	PayPalDoCaptureService *PayPalDoCaptureService `xml:"payPalDoCaptureService,omitempty"`

	PayPalEcDoPaymentService *PayPalEcDoPaymentService `xml:"payPalEcDoPaymentService,omitempty"`

	PayPalEcGetDetailsService *PayPalEcGetDetailsService `xml:"payPalEcGetDetailsService,omitempty"`

	PayPalEcSetService *PayPalEcSetService `xml:"payPalEcSetService,omitempty"`

	PayPalEcOrderSetupService *PayPalEcOrderSetupService `xml:"payPalEcOrderSetupService,omitempty"`

	PayPalAuthorizationService *PayPalAuthorizationService `xml:"payPalAuthorizationService,omitempty"`

	PayPalUpdateAgreementService *PayPalUpdateAgreementService `xml:"payPalUpdateAgreementService,omitempty"`

	PayPalCreateAgreementService *PayPalCreateAgreementService `xml:"payPalCreateAgreementService,omitempty"`

	PayPalDoRefTransactionService *PayPalDoRefTransactionService `xml:"payPalDoRefTransactionService,omitempty"`

	ChinaPaymentService *ChinaPaymentService `xml:"chinaPaymentService,omitempty"`

	ChinaRefundService *ChinaRefundService `xml:"chinaRefundService,omitempty"`

	BoletoPaymentService *BoletoPaymentService `xml:"boletoPaymentService,omitempty"`

	ApPaymentType string `xml:"apPaymentType,omitempty"`

	ApInitiateService *APInitiateService `xml:"apInitiateService,omitempty"`

	ApCheckStatusService *APCheckStatusService `xml:"apCheckStatusService,omitempty"`

	IgnoreCardExpiration bool `xml:"ignoreCardExpiration,omitempty"`

	ReportGroup string `xml:"reportGroup,omitempty"`

	ProcessorID string `xml:"processorID,omitempty"`

	ThirdPartyCertificationNumber string `xml:"thirdPartyCertificationNumber,omitempty"`

	TransactionLocalDateTime string `xml:"transactionLocalDateTime,omitempty"`

	SolutionProviderTransactionID string `xml:"solutionProviderTransactionID,omitempty"`

	SurchargeAmount *Amount `xml:"surchargeAmount,omitempty"`

	SurchargeSign string `xml:"surchargeSign,omitempty"`

	PinDataEncryptedPIN string `xml:"pinDataEncryptedPIN,omitempty"`

	PinDataKeySerialNumber string `xml:"pinDataKeySerialNumber,omitempty"`

	CashbackAmount *Amount `xml:"cashbackAmount,omitempty"`

	PinDebitPurchaseService *PinDebitPurchaseService `xml:"pinDebitPurchaseService,omitempty"`

	PinDebitCreditService *PinDebitCreditService `xml:"pinDebitCreditService,omitempty"`

	PinDebitReversalService *PinDebitReversalService `xml:"pinDebitReversalService,omitempty"`

	Ap *AP `xml:"ap,omitempty"`

	ApAuthService *APAuthService `xml:"apAuthService,omitempty"`

	ApAuthReversalService *APAuthReversalService `xml:"apAuthReversalService,omitempty"`

	ApCaptureService *APCaptureService `xml:"apCaptureService,omitempty"`

	ApRefundService *APRefundService `xml:"apRefundService,omitempty"`

	ApCheckoutDetailsService *APCheckOutDetailsService `xml:"apCheckoutDetailsService,omitempty"`

	ApTransactionDetailsService *APTransactionDetailsService `xml:"apTransactionDetailsService,omitempty"`

	ApConfirmPurchaseService *APConfirmPurchaseService `xml:"apConfirmPurchaseService,omitempty"`

	PayPalGetTxnDetailsService *PayPalGetTxnDetailsService `xml:"payPalGetTxnDetailsService,omitempty"`

	PayPalTransactionSearchService *PayPalTransactionSearchService `xml:"payPalTransactionSearchService,omitempty"`

	CcDCCUpdateService *CCDCCUpdateService `xml:"ccDCCUpdateService,omitempty"`

	EmvRequest *EmvRequest `xml:"emvRequest,omitempty"`

	MerchantTransactionIdentifier string `xml:"merchantTransactionIdentifier,omitempty"`

	HostedDataCreateService *HostedDataCreateService `xml:"hostedDataCreateService,omitempty"`

	HostedDataRetrieveService *HostedDataRetrieveService `xml:"hostedDataRetrieveService,omitempty"`

	MerchantCategoryCode string `xml:"merchantCategoryCode,omitempty"`

	SalesSlipNumber string `xml:"salesSlipNumber,omitempty"`

	MerchandiseCode string `xml:"merchandiseCode,omitempty"`

	PaymentInitiationChannel string `xml:"paymentInitiationChannel,omitempty"`

	ExtendedCreditTotalCount string `xml:"extendedCreditTotalCount,omitempty"`

	AuthIndicator string `xml:"authIndicator,omitempty"`

	PaymentNetworkToken *PaymentNetworkToken `xml:"paymentNetworkToken,omitempty"`

	Recipient *Recipient `xml:"recipient,omitempty"`

	Sender *Sender `xml:"sender,omitempty"`

	AutoRentalData *AutoRentalData `xml:"autoRentalData,omitempty"`

	PaymentSolution string `xml:"paymentSolution,omitempty"`

	Vc *VC `xml:"vc,omitempty"`

	DecryptVisaCheckoutDataService *DecryptVisaCheckoutDataService `xml:"decryptVisaCheckoutDataService,omitempty"`

	TaxManagementIndicator string `xml:"taxManagementIndicator,omitempty"`

	PromotionGroup *PromotionGroup `xml:"promotionGroup,omitempty"`

	Wallet *Wallet `xml:"wallet,omitempty"`

	Aft *Aft `xml:"aft,omitempty"`

	BalanceInquiry bool `xml:"balanceInquiry,omitempty"`

	PrenoteTransaction bool `xml:"prenoteTransaction,omitempty"`

	EncryptPaymentDataService *EncryptPaymentDataService `xml:"encryptPaymentDataService,omitempty"`
}

type VC struct {
	OrderID string `xml:"orderID,omitempty"`
}

type DecryptVisaCheckoutDataService struct {
	Run bool `xml:"run,attr,omitempty"`
}

type DCC struct {
	DccIndicator int32 `xml:"dccIndicator,omitempty"`

	ReferenceNumber string `xml:"referenceNumber,omitempty"`
}

type Promotion struct {
	DiscountedAmount *Amount `xml:"discountedAmount,omitempty"`

	Type_ string `xml:"type,omitempty"`

	Code string `xml:"code,omitempty"`

	ReceiptData string `xml:"receiptData,omitempty"`

	DiscountApplied *Amount `xml:"discountApplied,omitempty"`

	Description string `xml:"description,omitempty"`
}

type PromotionGroup struct {
	SubtotalAmount *Amount `xml:"subtotalAmount,omitempty"`

	TaxRate *Amount `xml:"taxRate,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type PromotionGroupReply struct {
	DiscountApplied *Amount `xml:"discountApplied,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type CCAuthReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	AvsCode string `xml:"avsCode,omitempty"`

	AvsCodeRaw string `xml:"avsCodeRaw,omitempty"`

	CvCode string `xml:"cvCode,omitempty"`

	CvCodeRaw string `xml:"cvCodeRaw,omitempty"`

	PersonalIDCode string `xml:"personalIDCode,omitempty"`

	AuthorizedDateTime string `xml:"authorizedDateTime,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	BmlAccountNumber string `xml:"bmlAccountNumber,omitempty"`

	AuthFactorCode string `xml:"authFactorCode,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	FundingTotals *FundingTotals `xml:"fundingTotals,omitempty"`

	FxQuoteID string `xml:"fxQuoteID,omitempty"`

	FxQuoteRate string `xml:"fxQuoteRate,omitempty"`

	FxQuoteType string `xml:"fxQuoteType,omitempty"`

	FxQuoteExpirationDateTime string `xml:"fxQuoteExpirationDateTime,omitempty"`

	AuthRecord string `xml:"authRecord,omitempty"`

	MerchantAdviceCode string `xml:"merchantAdviceCode,omitempty"`

	MerchantAdviceCodeRaw string `xml:"merchantAdviceCodeRaw,omitempty"`

	CavvResponseCode string `xml:"cavvResponseCode,omitempty"`

	CavvResponseCodeRaw string `xml:"cavvResponseCodeRaw,omitempty"`

	AuthenticationXID string `xml:"authenticationXID,omitempty"`

	AuthorizationXID string `xml:"authorizationXID,omitempty"`

	ProcessorCardType string `xml:"processorCardType,omitempty"`

	AccountBalance *Amount `xml:"accountBalance,omitempty"`

	ForwardCode string `xml:"forwardCode,omitempty"`

	EnhancedDataEnabled string `xml:"enhancedDataEnabled,omitempty"`

	ReferralResponseNumber string `xml:"referralResponseNumber,omitempty"`

	SubResponseCode string `xml:"subResponseCode,omitempty"`

	ApprovedAmount string `xml:"approvedAmount,omitempty"`

	CreditLine string `xml:"creditLine,omitempty"`

	ApprovedTerms string `xml:"approvedTerms,omitempty"`

	PaymentNetworkTransactionID string `xml:"paymentNetworkTransactionID,omitempty"`

	CardCategory string `xml:"cardCategory,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`

	RequestAmount *Amount `xml:"requestAmount,omitempty"`

	RequestCurrency string `xml:"requestCurrency,omitempty"`

	AccountBalanceCurrency string `xml:"accountBalanceCurrency,omitempty"`

	AccountBalanceSign string `xml:"accountBalanceSign,omitempty"`

	AmountType string `xml:"amountType,omitempty"`

	AccountType string `xml:"accountType,omitempty"`

	AffluenceIndicator string `xml:"affluenceIndicator,omitempty"`

	EvEmail string `xml:"evEmail,omitempty"`

	EvPhoneNumber string `xml:"evPhoneNumber,omitempty"`

	EvPostalCode string `xml:"evPostalCode,omitempty"`

	EvName string `xml:"evName,omitempty"`

	EvStreet string `xml:"evStreet,omitempty"`

	EvEmailRaw string `xml:"evEmailRaw,omitempty"`

	EvPhoneNumberRaw string `xml:"evPhoneNumberRaw,omitempty"`

	EvPostalCodeRaw string `xml:"evPostalCodeRaw,omitempty"`

	EvNameRaw string `xml:"evNameRaw,omitempty"`

	EvStreetRaw string `xml:"evStreetRaw,omitempty"`

	CardGroup string `xml:"cardGroup,omitempty"`

	PosData string `xml:"posData,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	CardIssuerCountry string `xml:"cardIssuerCountry,omitempty"`

	CardRegulated string `xml:"cardRegulated,omitempty"`

	CardCommercial string `xml:"cardCommercial,omitempty"`

	CardPrepaid string `xml:"cardPrepaid,omitempty"`

	CardPayroll string `xml:"cardPayroll,omitempty"`

	CardHealthcare string `xml:"cardHealthcare,omitempty"`

	CardSignatureDebit string `xml:"cardSignatureDebit,omitempty"`

	CardPINlessDebit string `xml:"cardPINlessDebit,omitempty"`

	CardLevel3Eligible string `xml:"cardLevel3Eligible,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`

	ProviderReasonCode string `xml:"providerReasonCode,omitempty"`

	ProviderReasonDescription string `xml:"providerReasonDescription,omitempty"`

	ProviderPassThroughData string `xml:"providerPassThroughData,omitempty"`

	ProviderCVNResponseCode string `xml:"providerCVNResponseCode,omitempty"`

	ProviderAVSResponseCode string `xml:"providerAVSResponseCode,omitempty"`

	ProviderAcquirerBankCode string `xml:"providerAcquirerBankCode,omitempty"`
}

type OCTReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ApprovalCode string `xml:"approvalCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`
}

type CCSaleReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	AvsCode string `xml:"avsCode,omitempty"`

	AvsCodeRaw string `xml:"avsCodeRaw,omitempty"`

	CvCode string `xml:"cvCode,omitempty"`

	CvCodeRaw string `xml:"cvCodeRaw,omitempty"`

	CavvResponseCode string `xml:"cavvResponseCode,omitempty"`

	CavvResponseCodeRaw string `xml:"cavvResponseCodeRaw,omitempty"`

	CardGroup string `xml:"cardGroup,omitempty"`

	PaymentNetworkTransactionID string `xml:"paymentNetworkTransactionID,omitempty"`

	CardCategory string `xml:"cardCategory,omitempty"`

	AccountBalance *Amount `xml:"accountBalance,omitempty"`

	AuthorizedDateTime string `xml:"authorizedDateTime,omitempty"`

	RequestAmount *Amount `xml:"requestAmount,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	AccountBalanceCurrency string `xml:"accountBalanceCurrency,omitempty"`

	AccountBalanceSign string `xml:"accountBalanceSign,omitempty"`
}

type CCSaleCreditReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	AuthorizedDateTime string `xml:"authorizedDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PaymentNetworkTransactionID string `xml:"paymentNetworkTransactionID,omitempty"`
}

type CCSaleReversalReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`
}

type CCIncrementalAuthReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	AuthorizedDateTime string `xml:"authorizedDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PaymentNetworkTransactionID string `xml:"paymentNetworkTransactionID,omitempty"`

	CardCategory string `xml:"cardCategory,omitempty"`
}

type CCCaptureReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	FundingTotals *FundingTotals `xml:"fundingTotals,omitempty"`

	FxQuoteID string `xml:"fxQuoteID,omitempty"`

	FxQuoteRate string `xml:"fxQuoteRate,omitempty"`

	FxQuoteType string `xml:"fxQuoteType,omitempty"`

	FxQuoteExpirationDateTime string `xml:"fxQuoteExpirationDateTime,omitempty"`

	PurchasingLevel3Enabled string `xml:"purchasingLevel3Enabled,omitempty"`

	EnhancedDataEnabled string `xml:"enhancedDataEnabled,omitempty"`
}

type ServiceFeeCalculateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`
}

type CCCreditReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PurchasingLevel3Enabled string `xml:"purchasingLevel3Enabled,omitempty"`

	EnhancedDataEnabled string `xml:"enhancedDataEnabled,omitempty"`

	AuthorizationXID string `xml:"authorizationXID,omitempty"`

	ForwardCode string `xml:"forwardCode,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`
}

type PinDebitPurchaseReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	NetworkCode string `xml:"networkCode,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	RequestAmount *Amount `xml:"requestAmount,omitempty"`

	RequestCurrency string `xml:"requestCurrency,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	AccountType string `xml:"accountType,omitempty"`

	AmountType string `xml:"amountType,omitempty"`

	AccountBalance string `xml:"accountBalance,omitempty"`

	AccountBalanceCurrency string `xml:"accountBalanceCurrency,omitempty"`

	AccountBalanceSign string `xml:"accountBalanceSign,omitempty"`
}

type PinDebitCreditReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	NetworkCode string `xml:"networkCode,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`
}

type PinDebitReversalReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`
}

type CCAuthReversalReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ForwardCode string `xml:"forwardCode,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`
}

type CCAutoAuthReversalReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Result string `xml:"result,omitempty"`
}

type ECDebitReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	SettlementMethod string `xml:"settlementMethod,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	VerificationLevel int32 `xml:"verificationLevel,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	AvsCode string `xml:"avsCode,omitempty"`

	AvsCodeRaw string `xml:"avsCodeRaw,omitempty"`

	VerificationCode string `xml:"verificationCode,omitempty"`

	VerificationCodeRaw string `xml:"verificationCodeRaw,omitempty"`

	CorrectedAccountNumber string `xml:"correctedAccountNumber,omitempty"`

	CorrectedRoutingNumber string `xml:"correctedRoutingNumber,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`
}

type ECCreditReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	SettlementMethod string `xml:"settlementMethod,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	VerificationCode string `xml:"verificationCode,omitempty"`

	VerificationCodeRaw string `xml:"verificationCodeRaw,omitempty"`

	CorrectedAccountNumber string `xml:"correctedAccountNumber,omitempty"`

	CorrectedRoutingNumber string `xml:"correctedRoutingNumber,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`
}

type ECAuthenticateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	CheckpointSummary string `xml:"checkpointSummary,omitempty"`

	FraudShieldIndicators string `xml:"fraudShieldIndicators,omitempty"`
}

type PayerAuthEnrollReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AcsURL string `xml:"acsURL,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	Eci string `xml:"eci,omitempty"`

	PaReq string `xml:"paReq,omitempty"`

	ProxyPAN string `xml:"proxyPAN,omitempty"`

	Xid string `xml:"xid,omitempty"`

	ProofXML string `xml:"proofXML,omitempty"`

	UcafCollectionIndicator string `xml:"ucafCollectionIndicator,omitempty"`

	VeresEnrolled string `xml:"veresEnrolled,omitempty"`

	AuthenticationPath string `xml:"authenticationPath,omitempty"`
}

type PayerAuthValidateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AuthenticationResult string `xml:"authenticationResult,omitempty"`

	AuthenticationStatusMessage string `xml:"authenticationStatusMessage,omitempty"`

	Cavv string `xml:"cavv,omitempty"`

	CavvAlgorithm string `xml:"cavvAlgorithm,omitempty"`

	CommerceIndicator string `xml:"commerceIndicator,omitempty"`

	Eci string `xml:"eci,omitempty"`

	EciRaw string `xml:"eciRaw,omitempty"`

	Xid string `xml:"xid,omitempty"`

	UcafAuthenticationData string `xml:"ucafAuthenticationData,omitempty"`

	UcafCollectionIndicator string `xml:"ucafCollectionIndicator,omitempty"`

	ParesStatus string `xml:"paresStatus,omitempty"`
}

type TaxReplyItem struct {
	CityTaxAmount *Amount `xml:"cityTaxAmount,omitempty"`

	CountyTaxAmount *Amount `xml:"countyTaxAmount,omitempty"`

	DistrictTaxAmount *Amount `xml:"districtTaxAmount,omitempty"`

	StateTaxAmount *Amount `xml:"stateTaxAmount,omitempty"`

	TotalTaxAmount *Amount `xml:"totalTaxAmount,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type TaxReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Currency string `xml:"currency,omitempty"`

	GrandTotalAmount *Amount `xml:"grandTotalAmount,omitempty"`

	TotalCityTaxAmount *Amount `xml:"totalCityTaxAmount,omitempty"`

	City string `xml:"city,omitempty"`

	TotalCountyTaxAmount *Amount `xml:"totalCountyTaxAmount,omitempty"`

	County string `xml:"county,omitempty"`

	TotalDistrictTaxAmount *Amount `xml:"totalDistrictTaxAmount,omitempty"`

	TotalStateTaxAmount *Amount `xml:"totalStateTaxAmount,omitempty"`

	State string `xml:"state,omitempty"`

	TotalTaxAmount *Amount `xml:"totalTaxAmount,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	Geocode string `xml:"geocode,omitempty"`

	Item *TaxReplyItem `xml:"item,omitempty"`
}

type DeviceFingerprint struct {
	CookiesEnabled bool `xml:"cookiesEnabled,omitempty"`

	FlashEnabled bool `xml:"flashEnabled,omitempty"`

	Hash string `xml:"hash,omitempty"`

	ImagesEnabled bool `xml:"imagesEnabled,omitempty"`

	JavascriptEnabled bool `xml:"javascriptEnabled,omitempty"`

	ProxyIPAddress string `xml:"proxyIPAddress,omitempty"`

	ProxyIPAddressActivities string `xml:"proxyIPAddressActivities,omitempty"`

	ProxyIPAddressAttributes string `xml:"proxyIPAddressAttributes,omitempty"`

	ProxyServerType string `xml:"proxyServerType,omitempty"`

	TrueIPAddress string `xml:"trueIPAddress,omitempty"`

	TrueIPAddressActivities string `xml:"trueIPAddressActivities,omitempty"`

	TrueIPAddressAttributes string `xml:"trueIPAddressAttributes,omitempty"`

	TrueIPAddressCity string `xml:"trueIPAddressCity,omitempty"`

	TrueIPAddressCountry string `xml:"trueIPAddressCountry,omitempty"`

	SmartID string `xml:"smartID,omitempty"`

	SmartIDConfidenceLevel string `xml:"smartIDConfidenceLevel,omitempty"`

	ScreenResolution string `xml:"screenResolution,omitempty"`

	BrowserLanguage string `xml:"browserLanguage,omitempty"`

	AgentType string `xml:"agentType,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ProfileDuration int32 `xml:"profileDuration,omitempty"`

	ProfiledURL string `xml:"profiledURL,omitempty"`

	TimeOnPage int32 `xml:"timeOnPage,omitempty"`

	DeviceMatch string `xml:"deviceMatch,omitempty"`

	FirstEncounter string `xml:"firstEncounter,omitempty"`

	FlashOS string `xml:"flashOS,omitempty"`

	FlashVersion string `xml:"flashVersion,omitempty"`

	DeviceLatitude string `xml:"deviceLatitude,omitempty"`

	DeviceLongitude string `xml:"deviceLongitude,omitempty"`

	GpsAccuracy string `xml:"gpsAccuracy,omitempty"`

	JbRoot int32 `xml:"jbRoot,omitempty"`

	JbRootReason string `xml:"jbRootReason,omitempty"`
}

type AFSReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AfsResult int32 `xml:"afsResult,omitempty"`

	HostSeverity int32 `xml:"hostSeverity,omitempty"`

	ConsumerLocalTime string `xml:"consumerLocalTime,omitempty"`

	AfsFactorCode string `xml:"afsFactorCode,omitempty"`

	AddressInfoCode string `xml:"addressInfoCode,omitempty"`

	HotlistInfoCode string `xml:"hotlistInfoCode,omitempty"`

	InternetInfoCode string `xml:"internetInfoCode,omitempty"`

	PhoneInfoCode string `xml:"phoneInfoCode,omitempty"`

	SuspiciousInfoCode string `xml:"suspiciousInfoCode,omitempty"`

	VelocityInfoCode string `xml:"velocityInfoCode,omitempty"`

	IdentityInfoCode string `xml:"identityInfoCode,omitempty"`

	IpCountry string `xml:"ipCountry,omitempty"`

	IpState string `xml:"ipState,omitempty"`

	IpCity string `xml:"ipCity,omitempty"`

	IpRoutingMethod string `xml:"ipRoutingMethod,omitempty"`

	IpAnonymizerStatus string `xml:"ipAnonymizerStatus,omitempty"`

	ScoreModelUsed string `xml:"scoreModelUsed,omitempty"`

	CardBin string `xml:"cardBin,omitempty"`

	BinCountry string `xml:"binCountry,omitempty"`

	CardAccountType string `xml:"cardAccountType,omitempty"`

	CardScheme string `xml:"cardScheme,omitempty"`

	CardIssuer string `xml:"cardIssuer,omitempty"`

	DeviceFingerprint *DeviceFingerprint `xml:"deviceFingerprint,omitempty"`
}

type DAVReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AddressType string `xml:"addressType,omitempty"`

	ApartmentInfo string `xml:"apartmentInfo,omitempty"`

	BarCode string `xml:"barCode,omitempty"`

	BarCodeCheckDigit string `xml:"barCodeCheckDigit,omitempty"`

	CareOf string `xml:"careOf,omitempty"`

	CityInfo string `xml:"cityInfo,omitempty"`

	CountryInfo string `xml:"countryInfo,omitempty"`

	DirectionalInfo string `xml:"directionalInfo,omitempty"`

	LvrInfo string `xml:"lvrInfo,omitempty"`

	MatchScore int32 `xml:"matchScore,omitempty"`

	StandardizedAddress1 string `xml:"standardizedAddress1,omitempty"`

	StandardizedAddress2 string `xml:"standardizedAddress2,omitempty"`

	StandardizedAddress3 string `xml:"standardizedAddress3,omitempty"`

	StandardizedAddress4 string `xml:"standardizedAddress4,omitempty"`

	StandardizedAddressNoApt string `xml:"standardizedAddressNoApt,omitempty"`

	StandardizedCity string `xml:"standardizedCity,omitempty"`

	StandardizedCounty string `xml:"standardizedCounty,omitempty"`

	StandardizedCSP string `xml:"standardizedCSP,omitempty"`

	StandardizedState string `xml:"standardizedState,omitempty"`

	StandardizedPostalCode string `xml:"standardizedPostalCode,omitempty"`

	StandardizedCountry string `xml:"standardizedCountry,omitempty"`

	StandardizedISOCountry string `xml:"standardizedISOCountry,omitempty"`

	StateInfo string `xml:"stateInfo,omitempty"`

	StreetInfo string `xml:"streetInfo,omitempty"`

	SuffixInfo string `xml:"suffixInfo,omitempty"`

	PostalCodeInfo string `xml:"postalCodeInfo,omitempty"`

	OverallInfo string `xml:"overallInfo,omitempty"`

	UsInfo string `xml:"usInfo,omitempty"`

	CaInfo string `xml:"caInfo,omitempty"`

	IntlInfo string `xml:"intlInfo,omitempty"`

	UsErrorInfo string `xml:"usErrorInfo,omitempty"`

	CaErrorInfo string `xml:"caErrorInfo,omitempty"`

	IntlErrorInfo string `xml:"intlErrorInfo,omitempty"`
}

type DeniedPartiesMatch struct {
	List string `xml:"list,omitempty"`

	Name string `xml:"name,omitempty"`

	Address string `xml:"address,omitempty"`

	Program string `xml:"program,omitempty"`
}

type ExportReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	IpCountryConfidence int32 `xml:"ipCountryConfidence,omitempty"`

	InfoCode string `xml:"infoCode,omitempty"`
}

type FXQuote struct {
	Id string `xml:"id,omitempty"`

	Rate string `xml:"rate,omitempty"`

	Type_ string `xml:"type,omitempty"`

	ExpirationDateTime string `xml:"expirationDateTime,omitempty"`

	Currency string `xml:"currency,omitempty"`

	FundingCurrency string `xml:"fundingCurrency,omitempty"`

	ReceivedDateTime string `xml:"receivedDateTime,omitempty"`
}

type FXRatesReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Quote *FXQuote `xml:"quote,omitempty"`
}

type BankTransferReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AccountHolder string `xml:"accountHolder,omitempty"`

	AccountNumber string `xml:"accountNumber,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	BankName string `xml:"bankName,omitempty"`

	BankCity string `xml:"bankCity,omitempty"`

	BankCountry string `xml:"bankCountry,omitempty"`

	PaymentReference string `xml:"paymentReference,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	BankSwiftCode string `xml:"bankSwiftCode,omitempty"`

	BankSpecialID string `xml:"bankSpecialID,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Iban string `xml:"iban,omitempty"`

	BankCode string `xml:"bankCode,omitempty"`

	BranchCode string `xml:"branchCode,omitempty"`
}

type BankTransferRealTimeReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	FormMethod string `xml:"formMethod,omitempty"`

	FormAction string `xml:"formAction,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PaymentReference string `xml:"paymentReference,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`
}

type DirectDebitMandateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	MandateID string `xml:"mandateID,omitempty"`

	MandateMaturationDate string `xml:"mandateMaturationDate,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`
}

type BankTransferRefundReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Iban string `xml:"iban,omitempty"`
}

type DirectDebitReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`

	MandateAuthenticationDate string `xml:"mandateAuthenticationDate,omitempty"`

	MandateID string `xml:"mandateID,omitempty"`

	Iban string `xml:"iban,omitempty"`
}

type DirectDebitValidateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Iban string `xml:"iban,omitempty"`

	BankSwiftCode string `xml:"bankSwiftCode,omitempty"`
}

type DirectDebitRefundReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`

	Iban string `xml:"iban,omitempty"`
}

type PaySubscriptionCreateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	SubscriptionID string `xml:"subscriptionID,omitempty"`
}

type PaySubscriptionUpdateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	SubscriptionID string `xml:"subscriptionID,omitempty"`

	SubscriptionIDNew string `xml:"subscriptionIDNew,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`
}

type PaySubscriptionEventUpdateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`
}

type PaySubscriptionRetrieveReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	ApprovalRequired string `xml:"approvalRequired,omitempty"`

	AutomaticRenew string `xml:"automaticRenew,omitempty"`

	CardAccountNumber string `xml:"cardAccountNumber,omitempty"`

	CardExpirationMonth string `xml:"cardExpirationMonth,omitempty"`

	CardExpirationYear string `xml:"cardExpirationYear,omitempty"`

	CardIssueNumber string `xml:"cardIssueNumber,omitempty"`

	CardStartMonth string `xml:"cardStartMonth,omitempty"`

	CardStartYear string `xml:"cardStartYear,omitempty"`

	CardType string `xml:"cardType,omitempty"`

	CheckAccountNumber string `xml:"checkAccountNumber,omitempty"`

	CheckAccountType string `xml:"checkAccountType,omitempty"`

	CheckBankTransitNumber string `xml:"checkBankTransitNumber,omitempty"`

	CheckSecCode string `xml:"checkSecCode,omitempty"`

	CheckAuthenticateID string `xml:"checkAuthenticateID,omitempty"`

	City string `xml:"city,omitempty"`

	Comments string `xml:"comments,omitempty"`

	CompanyName string `xml:"companyName,omitempty"`

	Country string `xml:"country,omitempty"`

	Currency string `xml:"currency,omitempty"`

	CustomerAccountID string `xml:"customerAccountID,omitempty"`

	Email string `xml:"email,omitempty"`

	EndDate string `xml:"endDate,omitempty"`

	FirstName string `xml:"firstName,omitempty"`

	Frequency string `xml:"frequency,omitempty"`

	LastName string `xml:"lastName,omitempty"`

	MerchantReferenceCode string `xml:"merchantReferenceCode,omitempty"`

	PaymentMethod string `xml:"paymentMethod,omitempty"`

	PaymentsRemaining string `xml:"paymentsRemaining,omitempty"`

	PhoneNumber string `xml:"phoneNumber,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	RecurringAmount string `xml:"recurringAmount,omitempty"`

	SetupAmount string `xml:"setupAmount,omitempty"`

	StartDate string `xml:"startDate,omitempty"`

	State string `xml:"state,omitempty"`

	Status string `xml:"status,omitempty"`

	Street1 string `xml:"street1,omitempty"`

	Street2 string `xml:"street2,omitempty"`

	SubscriptionID string `xml:"subscriptionID,omitempty"`

	SubscriptionIDNew string `xml:"subscriptionIDNew,omitempty"`

	Title string `xml:"title,omitempty"`

	TotalPayments string `xml:"totalPayments,omitempty"`

	ShipToFirstName string `xml:"shipToFirstName,omitempty"`

	ShipToLastName string `xml:"shipToLastName,omitempty"`

	ShipToStreet1 string `xml:"shipToStreet1,omitempty"`

	ShipToStreet2 string `xml:"shipToStreet2,omitempty"`

	ShipToCity string `xml:"shipToCity,omitempty"`

	ShipToState string `xml:"shipToState,omitempty"`

	ShipToPostalCode string `xml:"shipToPostalCode,omitempty"`

	ShipToCompany string `xml:"shipToCompany,omitempty"`

	ShipToCountry string `xml:"shipToCountry,omitempty"`

	BillPayment string `xml:"billPayment,omitempty"`

	MerchantDefinedDataField1 string `xml:"merchantDefinedDataField1,omitempty"`

	MerchantDefinedDataField2 string `xml:"merchantDefinedDataField2,omitempty"`

	MerchantDefinedDataField3 string `xml:"merchantDefinedDataField3,omitempty"`

	MerchantDefinedDataField4 string `xml:"merchantDefinedDataField4,omitempty"`

	MerchantSecureDataField1 string `xml:"merchantSecureDataField1,omitempty"`

	MerchantSecureDataField2 string `xml:"merchantSecureDataField2,omitempty"`

	MerchantSecureDataField3 string `xml:"merchantSecureDataField3,omitempty"`

	MerchantSecureDataField4 string `xml:"merchantSecureDataField4,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`

	CompanyTaxID string `xml:"companyTaxID,omitempty"`

	DriversLicenseNumber string `xml:"driversLicenseNumber,omitempty"`

	DriversLicenseState string `xml:"driversLicenseState,omitempty"`

	DateOfBirth string `xml:"dateOfBirth,omitempty"`
}

type PaySubscriptionDeleteReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	SubscriptionID string `xml:"subscriptionID,omitempty"`
}

type PayPalPaymentReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	SecureData string `xml:"secureData,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`
}

type PayPalCreditReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`
}

type VoidReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`
}

type PinlessDebitReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	AuthorizationCode string `xml:"authorizationCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ReceiptNumber string `xml:"receiptNumber,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	OwnerMerchantID string `xml:"ownerMerchantID,omitempty"`
}

type PinlessDebitValidateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Status string `xml:"status,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`
}

type PinlessDebitReversalReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`
}

type PayPalButtonCreateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	EncryptedFormData string `xml:"encryptedFormData,omitempty"`

	UnencryptedFormData string `xml:"unencryptedFormData,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ButtonType string `xml:"buttonType,omitempty"`
}

type PayPalPreapprovedPaymentReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PayerStatus string `xml:"payerStatus,omitempty"`

	PayerName string `xml:"payerName,omitempty"`

	TransactionType string `xml:"transactionType,omitempty"`

	FeeAmount string `xml:"feeAmount,omitempty"`

	PayerCountry string `xml:"payerCountry,omitempty"`

	PendingReason string `xml:"pendingReason,omitempty"`

	PaymentStatus string `xml:"paymentStatus,omitempty"`

	MpStatus string `xml:"mpStatus,omitempty"`

	Payer string `xml:"payer,omitempty"`

	PayerID string `xml:"payerID,omitempty"`

	PayerBusiness string `xml:"payerBusiness,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	Desc string `xml:"desc,omitempty"`

	MpMax string `xml:"mpMax,omitempty"`

	PaymentType string `xml:"paymentType,omitempty"`

	PaymentDate string `xml:"paymentDate,omitempty"`

	PaymentGrossAmount string `xml:"paymentGrossAmount,omitempty"`

	SettleAmount string `xml:"settleAmount,omitempty"`

	TaxAmount string `xml:"taxAmount,omitempty"`

	ExchangeRate string `xml:"exchangeRate,omitempty"`

	PaymentSourceID string `xml:"paymentSourceID,omitempty"`
}

type PayPalPreapprovedUpdateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PayerStatus string `xml:"payerStatus,omitempty"`

	PayerName string `xml:"payerName,omitempty"`

	PayerCountry string `xml:"payerCountry,omitempty"`

	MpStatus string `xml:"mpStatus,omitempty"`

	Payer string `xml:"payer,omitempty"`

	PayerID string `xml:"payerID,omitempty"`

	PayerBusiness string `xml:"payerBusiness,omitempty"`

	Desc string `xml:"desc,omitempty"`

	MpMax string `xml:"mpMax,omitempty"`

	PaymentSourceID string `xml:"paymentSourceID,omitempty"`
}

type PayPalEcSetReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	PaypalToken string `xml:"paypalToken,omitempty"`

	Amount string `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`
}

type PayPalEcGetDetailsReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	PaypalToken string `xml:"paypalToken,omitempty"`

	Payer string `xml:"payer,omitempty"`

	PayerId string `xml:"payerId,omitempty"`

	PayerStatus string `xml:"payerStatus,omitempty"`

	PayerSalutation string `xml:"payerSalutation,omitempty"`

	PayerFirstname string `xml:"payerFirstname,omitempty"`

	PayerMiddlename string `xml:"payerMiddlename,omitempty"`

	PayerLastname string `xml:"payerLastname,omitempty"`

	PayerSuffix string `xml:"payerSuffix,omitempty"`

	PayerCountry string `xml:"payerCountry,omitempty"`

	PayerBusiness string `xml:"payerBusiness,omitempty"`

	ShipToName string `xml:"shipToName,omitempty"`

	ShipToAddress1 string `xml:"shipToAddress1,omitempty"`

	ShipToAddress2 string `xml:"shipToAddress2,omitempty"`

	ShipToCity string `xml:"shipToCity,omitempty"`

	ShipToState string `xml:"shipToState,omitempty"`

	ShipToCountry string `xml:"shipToCountry,omitempty"`

	ShipToZip string `xml:"shipToZip,omitempty"`

	AddressStatus string `xml:"addressStatus,omitempty"`

	PayerPhone string `xml:"payerPhone,omitempty"`

	AvsCode string `xml:"avsCode,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`

	Street1 string `xml:"street1,omitempty"`

	Street2 string `xml:"street2,omitempty"`

	City string `xml:"city,omitempty"`

	State string `xml:"state,omitempty"`

	PostalCode string `xml:"postalCode,omitempty"`

	CountryCode string `xml:"countryCode,omitempty"`

	CountryName string `xml:"countryName,omitempty"`

	AddressID string `xml:"addressID,omitempty"`

	PaypalBillingAgreementAcceptedStatus string `xml:"paypalBillingAgreementAcceptedStatus,omitempty"`

	PaypalTaxAmount string `xml:"paypalTaxAmount,omitempty"`

	Item *Item `xml:"item,omitempty"`
}

type PayPalEcDoPaymentReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	PaypalToken string `xml:"paypalToken,omitempty"`

	TransactionId string `xml:"transactionId,omitempty"`

	PaypalTransactiontype string `xml:"paypalTransactiontype,omitempty"`

	PaymentType string `xml:"paymentType,omitempty"`

	PaypalOrderTime string `xml:"paypalOrderTime,omitempty"`

	PaypalAmount string `xml:"paypalAmount,omitempty"`

	PaypalFeeAmount string `xml:"paypalFeeAmount,omitempty"`

	PaypalTaxAmount string `xml:"paypalTaxAmount,omitempty"`

	PaypalExchangeRate string `xml:"paypalExchangeRate,omitempty"`

	PaypalPaymentStatus string `xml:"paypalPaymentStatus,omitempty"`

	PaypalPendingReason string `xml:"paypalPendingReason,omitempty"`

	OrderId string `xml:"orderId,omitempty"`

	PaypalReasonCode string `xml:"paypalReasonCode,omitempty"`

	Amount string `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`

	PaypalBillingAgreementId string `xml:"paypalBillingAgreementId,omitempty"`
}

type PayPalDoCaptureReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AuthorizationId string `xml:"authorizationId,omitempty"`

	TransactionId string `xml:"transactionId,omitempty"`

	ParentTransactionId string `xml:"parentTransactionId,omitempty"`

	PaypalReceiptId string `xml:"paypalReceiptId,omitempty"`

	PaypalTransactiontype string `xml:"paypalTransactiontype,omitempty"`

	PaypalPaymentType string `xml:"paypalPaymentType,omitempty"`

	PaypalOrderTime string `xml:"paypalOrderTime,omitempty"`

	PaypalPaymentGrossAmount string `xml:"paypalPaymentGrossAmount,omitempty"`

	PaypalFeeAmount string `xml:"paypalFeeAmount,omitempty"`

	PaypalTaxAmount string `xml:"paypalTaxAmount,omitempty"`

	PaypalExchangeRate string `xml:"paypalExchangeRate,omitempty"`

	PaypalPaymentStatus string `xml:"paypalPaymentStatus,omitempty"`

	Amount string `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`

	PaypalPendingReason string `xml:"paypalPendingReason,omitempty"`
}

type PayPalAuthReversalReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AuthorizationId string `xml:"authorizationId,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`
}

type PayPalRefundReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	TransactionId string `xml:"transactionId,omitempty"`

	PaypalNetRefundAmount string `xml:"paypalNetRefundAmount,omitempty"`

	PaypalFeeRefundAmount string `xml:"paypalFeeRefundAmount,omitempty"`

	PaypalGrossRefundAmount string `xml:"paypalGrossRefundAmount,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`
}

type PayPalEcOrderSetupReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	PaypalToken string `xml:"paypalToken,omitempty"`

	TransactionId string `xml:"transactionId,omitempty"`

	PaypalTransactiontype string `xml:"paypalTransactiontype,omitempty"`

	PaymentType string `xml:"paymentType,omitempty"`

	PaypalOrderTime string `xml:"paypalOrderTime,omitempty"`

	PaypalAmount string `xml:"paypalAmount,omitempty"`

	PaypalFeeAmount string `xml:"paypalFeeAmount,omitempty"`

	PaypalTaxAmount string `xml:"paypalTaxAmount,omitempty"`

	PaypalExchangeRate string `xml:"paypalExchangeRate,omitempty"`

	PaypalPaymentStatus string `xml:"paypalPaymentStatus,omitempty"`

	PaypalPendingReason string `xml:"paypalPendingReason,omitempty"`

	PaypalReasonCode string `xml:"paypalReasonCode,omitempty"`

	Amount string `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`
}

type PayPalAuthorizationReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	TransactionId string `xml:"transactionId,omitempty"`

	PaypalAmount string `xml:"paypalAmount,omitempty"`

	Amount string `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`

	ProtectionEligibility string `xml:"protectionEligibility,omitempty"`

	ProtectionEligibilityType string `xml:"protectionEligibilityType,omitempty"`
}

type PayPalUpdateAgreementReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	PaypalBillingAgreementId string `xml:"paypalBillingAgreementId,omitempty"`

	PaypalBillingAgreementDesc string `xml:"paypalBillingAgreementDesc,omitempty"`

	PaypalBillingAgreementCustom string `xml:"paypalBillingAgreementCustom,omitempty"`

	PaypalBillingAgreementStatus string `xml:"paypalBillingAgreementStatus,omitempty"`

	Payer string `xml:"payer,omitempty"`

	PayerId string `xml:"payerId,omitempty"`

	PayerStatus string `xml:"payerStatus,omitempty"`

	PayerCountry string `xml:"payerCountry,omitempty"`

	PayerBusiness string `xml:"payerBusiness,omitempty"`

	PayerSalutation string `xml:"payerSalutation,omitempty"`

	PayerFirstname string `xml:"payerFirstname,omitempty"`

	PayerMiddlename string `xml:"payerMiddlename,omitempty"`

	PayerLastname string `xml:"payerLastname,omitempty"`

	PayerSuffix string `xml:"payerSuffix,omitempty"`

	AddressStatus string `xml:"addressStatus,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`
}

type PayPalCreateAgreementReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	PaypalBillingAgreementId string `xml:"paypalBillingAgreementId,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`
}

type PayPalDoRefTransactionReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	PaypalBillingAgreementId string `xml:"paypalBillingAgreementId,omitempty"`

	TransactionId string `xml:"transactionId,omitempty"`

	PaypalTransactionType string `xml:"paypalTransactionType,omitempty"`

	PaypalPaymentType string `xml:"paypalPaymentType,omitempty"`

	PaypalOrderTime string `xml:"paypalOrderTime,omitempty"`

	PaypalAmount string `xml:"paypalAmount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	PaypalTaxAmount string `xml:"paypalTaxAmount,omitempty"`

	PaypalExchangeRate string `xml:"paypalExchangeRate,omitempty"`

	PaypalPaymentStatus string `xml:"paypalPaymentStatus,omitempty"`

	PaypalPendingReason string `xml:"paypalPendingReason,omitempty"`

	PaypalReasonCode string `xml:"paypalReasonCode,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`

	CorrelationID string `xml:"correlationID,omitempty"`
}

type RiskUpdateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`
}

type FraudUpdateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`
}

type CaseManagementActionReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`
}

type RuleResultItem struct {
	Name string `xml:"name,omitempty"`

	Decision string `xml:"decision,omitempty"`

	Evaluation string `xml:"evaluation,omitempty"`

	RuleID int32 `xml:"ruleID,omitempty"`
}

type RuleResultItems struct {
	RuleResultItem *RuleResultItem `xml:"ruleResultItem,omitempty"`
}

type DecisionReply struct {
	CasePriority int32 `xml:"casePriority,omitempty"`

	ActiveProfileReply *ProfileReply `xml:"activeProfileReply,omitempty"`

	VelocityInfoCode string `xml:"velocityInfoCode,omitempty"`
}

type AdditionalFields struct {
	Field *Field `xml:"field,omitempty"`
}

type Field struct {
	Provider string `xml:"provider,omitempty"`

	Name string `xml:"name,omitempty"`

	Value string `xml:"value,omitempty"`
}

type DMEReply struct {
	EventType string `xml:"eventType,omitempty"`

	EventInfo string `xml:"eventInfo,omitempty"`

	EventHotlistInfo string `xml:"eventHotlistInfo,omitempty"`

	EventPolicy string `xml:"eventPolicy,omitempty"`

	AdditionalFields *AdditionalFields `xml:"additionalFields,omitempty"`
}

type ProfileReply struct {
	SelectedBy string `xml:"selectedBy,omitempty"`

	Name string `xml:"name,omitempty"`

	DestinationQueue string `xml:"destinationQueue,omitempty"`

	ProfileScore string `xml:"profileScore,omitempty"`

	RulesTriggered *RuleResultItems `xml:"rulesTriggered,omitempty"`
}

type CCDCCReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	DccSupported bool `xml:"dccSupported,omitempty"`

	ValidHours string `xml:"validHours,omitempty"`

	MarginRatePercentage string `xml:"marginRatePercentage,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`
}

type CCDCCUpdateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`
}

type ChinaPaymentReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	FormData string `xml:"formData,omitempty"`

	VerifyFailure string `xml:"verifyFailure,omitempty"`

	VerifyInProcess string `xml:"verifyInProcess,omitempty"`

	VerifySuccess string `xml:"verifySuccess,omitempty"`
}

type ChinaRefundReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	Currency string `xml:"currency,omitempty"`
}

type BoletoPaymentReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	BoletoNumber string `xml:"boletoNumber,omitempty"`

	ExpirationDate string `xml:"expirationDate,omitempty"`

	Url string `xml:"url,omitempty"`
}

type APInitiateReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	MerchantURL string `xml:"merchantURL,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	Signature string `xml:"signature,omitempty"`

	PublicKey string `xml:"publicKey,omitempty"`
}

type APCheckStatusReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	PaymentStatus string `xml:"paymentStatus,omitempty"`

	ProcessorTradeNo string `xml:"processorTradeNo,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`
}

type APReply struct {
	OrderID string `xml:"orderID,omitempty"`

	CardGroup string `xml:"cardGroup,omitempty"`

	CardType string `xml:"cardType,omitempty"`

	CardNumberSuffix string `xml:"cardNumberSuffix,omitempty"`

	CardExpirationMonth string `xml:"cardExpirationMonth,omitempty"`

	CardExpirationYear string `xml:"cardExpirationYear,omitempty"`

	AvsCodeRaw string `xml:"avsCodeRaw,omitempty"`

	PurchaseID string `xml:"purchaseID,omitempty"`

	ProductID string `xml:"productID,omitempty"`

	ProductDescription string `xml:"productDescription,omitempty"`

	ShippingAmount string `xml:"shippingAmount,omitempty"`

	HandlingAmount string `xml:"handlingAmount,omitempty"`

	ShippingHandlingAmount string `xml:"shippingHandlingAmount,omitempty"`

	AdditionalAmount string `xml:"additionalAmount,omitempty"`

	TaxAmount string `xml:"taxAmount,omitempty"`

	SubtotalAmount string `xml:"subtotalAmount,omitempty"`

	TotalPurchaseAmount string `xml:"totalPurchaseAmount,omitempty"`

	GiftWrapAmount string `xml:"giftWrapAmount,omitempty"`

	DiscountAmount string `xml:"discountAmount,omitempty"`

	CardNumberPrefix string `xml:"cardNumberPrefix,omitempty"`

	RiskIndicator string `xml:"riskIndicator,omitempty"`

	MerchantUUID string `xml:"merchantUUID,omitempty"`

	MerchantSiteID string `xml:"merchantSiteID,omitempty"`
}

type APAuthReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	Status string `xml:"status,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ProviderResponse string `xml:"providerResponse,omitempty"`
}

type APAuthReversalReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	Status string `xml:"status,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ProviderResponse string `xml:"providerResponse,omitempty"`
}

type APCaptureReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	Status string `xml:"status,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProviderResponse string `xml:"providerResponse,omitempty"`
}

type APRefundReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	Status string `xml:"status,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ReturnRef string `xml:"returnRef,omitempty"`

	ProviderResponse string `xml:"providerResponse,omitempty"`

	ProcessorTransactionID string `xml:"processorTransactionID,omitempty"`
}

type APCheckOutDetailsReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Status string `xml:"status,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ProviderResponse string `xml:"providerResponse,omitempty"`
}

type APTransactionDetailsReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	Status string `xml:"status,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ReconciliationID string `xml:"reconciliationID,omitempty"`

	ProviderResponse string `xml:"providerResponse,omitempty"`
}

type APConfirmPurchaseReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Status string `xml:"status,omitempty"`

	ProcessorResponse string `xml:"processorResponse,omitempty"`

	Amount *Amount `xml:"amount,omitempty"`

	DateTime string `xml:"dateTime,omitempty"`

	ProviderResponse string `xml:"providerResponse,omitempty"`
}

type ReplyMessage struct {
	XMLName xml.Name `xml:"urn:schemas-cybersource-com:transaction-data-1.120 replyMessage"`

	MerchantReferenceCode string `xml:"merchantReferenceCode,omitempty"`

	RequestID string `xml:"requestID,omitempty"`

	Decision string `xml:"decision,omitempty"`

	ReasonCode int32 `xml:"reasonCode,omitempty"`

	MissingField string `xml:"missingField,omitempty"`

	InvalidField string `xml:"invalidField,omitempty"`

	RequestToken string `xml:"requestToken,omitempty"`

	PurchaseTotals *PurchaseTotals `xml:"purchaseTotals,omitempty"`

	DeniedPartiesMatch *DeniedPartiesMatch `xml:"deniedPartiesMatch,omitempty"`

	CcAuthReply *CCAuthReply `xml:"ccAuthReply,omitempty"`

	OctReply *OCTReply `xml:"octReply,omitempty"`

	CcSaleReply *CCSaleReply `xml:"ccSaleReply,omitempty"`

	CcSaleCreditReply *CCSaleCreditReply `xml:"ccSaleCreditReply,omitempty"`

	CcSaleReversalReply *CCSaleReversalReply `xml:"ccSaleReversalReply,omitempty"`

	CcIncrementalAuthReply *CCIncrementalAuthReply `xml:"ccIncrementalAuthReply,omitempty"`

	ServiceFeeCalculateReply *ServiceFeeCalculateReply `xml:"serviceFeeCalculateReply,omitempty"`

	CcCaptureReply *CCCaptureReply `xml:"ccCaptureReply,omitempty"`

	CcCreditReply *CCCreditReply `xml:"ccCreditReply,omitempty"`

	CcAuthReversalReply *CCAuthReversalReply `xml:"ccAuthReversalReply,omitempty"`

	CcAutoAuthReversalReply *CCAutoAuthReversalReply `xml:"ccAutoAuthReversalReply,omitempty"`

	CcDCCReply *CCDCCReply `xml:"ccDCCReply,omitempty"`

	CcDCCUpdateReply *CCDCCUpdateReply `xml:"ccDCCUpdateReply,omitempty"`

	EcDebitReply *ECDebitReply `xml:"ecDebitReply,omitempty"`

	EcCreditReply *ECCreditReply `xml:"ecCreditReply,omitempty"`

	EcAuthenticateReply *ECAuthenticateReply `xml:"ecAuthenticateReply,omitempty"`

	PayerAuthEnrollReply *PayerAuthEnrollReply `xml:"payerAuthEnrollReply,omitempty"`

	PayerAuthValidateReply *PayerAuthValidateReply `xml:"payerAuthValidateReply,omitempty"`

	TaxReply *TaxReply `xml:"taxReply,omitempty"`

	EncryptedPayment *EncryptedPayment `xml:"encryptedPayment,omitempty"`

	EncryptPaymentDataReply *EncryptPaymentDataReply `xml:"encryptPaymentDataReply,omitempty"`

	DmeReply *DMEReply `xml:"dmeReply,omitempty"`

	AfsReply *AFSReply `xml:"afsReply,omitempty"`

	DavReply *DAVReply `xml:"davReply,omitempty"`

	ExportReply *ExportReply `xml:"exportReply,omitempty"`

	FxRatesReply *FXRatesReply `xml:"fxRatesReply,omitempty"`

	BankTransferReply *BankTransferReply `xml:"bankTransferReply,omitempty"`

	BankTransferRefundReply *BankTransferRefundReply `xml:"bankTransferRefundReply,omitempty"`

	BankTransferRealTimeReply *BankTransferRealTimeReply `xml:"bankTransferRealTimeReply,omitempty"`

	DirectDebitMandateReply *DirectDebitMandateReply `xml:"directDebitMandateReply,omitempty"`

	DirectDebitReply *DirectDebitReply `xml:"directDebitReply,omitempty"`

	DirectDebitValidateReply *DirectDebitValidateReply `xml:"directDebitValidateReply,omitempty"`

	DirectDebitRefundReply *DirectDebitRefundReply `xml:"directDebitRefundReply,omitempty"`

	PaySubscriptionCreateReply *PaySubscriptionCreateReply `xml:"paySubscriptionCreateReply,omitempty"`

	PaySubscriptionUpdateReply *PaySubscriptionUpdateReply `xml:"paySubscriptionUpdateReply,omitempty"`

	PaySubscriptionEventUpdateReply *PaySubscriptionEventUpdateReply `xml:"paySubscriptionEventUpdateReply,omitempty"`

	PaySubscriptionRetrieveReply *PaySubscriptionRetrieveReply `xml:"paySubscriptionRetrieveReply,omitempty"`

	PaySubscriptionDeleteReply *PaySubscriptionDeleteReply `xml:"paySubscriptionDeleteReply,omitempty"`

	PayPalPaymentReply *PayPalPaymentReply `xml:"payPalPaymentReply,omitempty"`

	PayPalCreditReply *PayPalCreditReply `xml:"payPalCreditReply,omitempty"`

	VoidReply *VoidReply `xml:"voidReply,omitempty"`

	PinlessDebitReply *PinlessDebitReply `xml:"pinlessDebitReply,omitempty"`

	PinlessDebitValidateReply *PinlessDebitValidateReply `xml:"pinlessDebitValidateReply,omitempty"`

	PinlessDebitReversalReply *PinlessDebitReversalReply `xml:"pinlessDebitReversalReply,omitempty"`

	PayPalButtonCreateReply *PayPalButtonCreateReply `xml:"payPalButtonCreateReply,omitempty"`

	PayPalPreapprovedPaymentReply *PayPalPreapprovedPaymentReply `xml:"payPalPreapprovedPaymentReply,omitempty"`

	PayPalPreapprovedUpdateReply *PayPalPreapprovedUpdateReply `xml:"payPalPreapprovedUpdateReply,omitempty"`

	RiskUpdateReply *RiskUpdateReply `xml:"riskUpdateReply,omitempty"`

	FraudUpdateReply *FraudUpdateReply `xml:"fraudUpdateReply,omitempty"`

	CaseManagementActionReply *CaseManagementActionReply `xml:"caseManagementActionReply,omitempty"`

	DecisionReply *DecisionReply `xml:"decisionReply,omitempty"`

	PayPalRefundReply *PayPalRefundReply `xml:"payPalRefundReply,omitempty"`

	PayPalAuthReversalReply *PayPalAuthReversalReply `xml:"payPalAuthReversalReply,omitempty"`

	PayPalDoCaptureReply *PayPalDoCaptureReply `xml:"payPalDoCaptureReply,omitempty"`

	PayPalEcDoPaymentReply *PayPalEcDoPaymentReply `xml:"payPalEcDoPaymentReply,omitempty"`

	PayPalEcGetDetailsReply *PayPalEcGetDetailsReply `xml:"payPalEcGetDetailsReply,omitempty"`

	PayPalEcSetReply *PayPalEcSetReply `xml:"payPalEcSetReply,omitempty"`

	PayPalAuthorizationReply *PayPalAuthorizationReply `xml:"payPalAuthorizationReply,omitempty"`

	PayPalEcOrderSetupReply *PayPalEcOrderSetupReply `xml:"payPalEcOrderSetupReply,omitempty"`

	PayPalUpdateAgreementReply *PayPalUpdateAgreementReply `xml:"payPalUpdateAgreementReply,omitempty"`

	PayPalCreateAgreementReply *PayPalCreateAgreementReply `xml:"payPalCreateAgreementReply,omitempty"`

	PayPalDoRefTransactionReply *PayPalDoRefTransactionReply `xml:"payPalDoRefTransactionReply,omitempty"`

	ChinaPaymentReply *ChinaPaymentReply `xml:"chinaPaymentReply,omitempty"`

	ChinaRefundReply *ChinaRefundReply `xml:"chinaRefundReply,omitempty"`

	BoletoPaymentReply *BoletoPaymentReply `xml:"boletoPaymentReply,omitempty"`

	PinDebitPurchaseReply *PinDebitPurchaseReply `xml:"pinDebitPurchaseReply,omitempty"`

	PinDebitCreditReply *PinDebitCreditReply `xml:"pinDebitCreditReply,omitempty"`

	PinDebitReversalReply *PinDebitReversalReply `xml:"pinDebitReversalReply,omitempty"`

	ApInitiateReply *APInitiateReply `xml:"apInitiateReply,omitempty"`

	ApCheckStatusReply *APCheckStatusReply `xml:"apCheckStatusReply,omitempty"`

	ReceiptNumber string `xml:"receiptNumber,omitempty"`

	AdditionalData string `xml:"additionalData,omitempty"`

	SolutionProviderTransactionID string `xml:"solutionProviderTransactionID,omitempty"`

	ApReply *APReply `xml:"apReply,omitempty"`

	ShipTo *ShipTo `xml:"shipTo,omitempty"`

	BillTo *BillTo `xml:"billTo,omitempty"`

	ApAuthReply *APAuthReply `xml:"apAuthReply,omitempty"`

	ApAuthReversalReply *APAuthReversalReply `xml:"apAuthReversalReply,omitempty"`

	ApCaptureReply *APCaptureReply `xml:"apCaptureReply,omitempty"`

	ApRefundReply *APRefundReply `xml:"apRefundReply,omitempty"`

	ApCheckoutDetailsReply *APCheckOutDetailsReply `xml:"apCheckoutDetailsReply,omitempty"`

	ApTransactionDetailsReply *APTransactionDetailsReply `xml:"apTransactionDetailsReply,omitempty"`

	ApConfirmPurchaseReply *APConfirmPurchaseReply `xml:"apConfirmPurchaseReply,omitempty"`

	Promotion *Promotion `xml:"promotion,omitempty"`

	PromotionGroup *PromotionGroupReply `xml:"promotionGroup,omitempty"`

	PayPalGetTxnDetailsReply *PayPalGetTxnDetailsReply `xml:"payPalGetTxnDetailsReply,omitempty"`

	PayPalTransactionSearchReply *PayPalTransactionSearchReply `xml:"payPalTransactionSearchReply,omitempty"`

	EmvReply *EmvReply `xml:"emvReply,omitempty"`

	OriginalTransaction *OriginalTransaction `xml:"originalTransaction,omitempty"`

	HostedDataCreateReply *HostedDataCreateReply `xml:"hostedDataCreateReply,omitempty"`

	HostedDataRetrieveReply *HostedDataRetrieveReply `xml:"hostedDataRetrieveReply,omitempty"`

	SalesSlipNumber string `xml:"salesSlipNumber,omitempty"`

	AdditionalProcessorResponse string `xml:"additionalProcessorResponse,omitempty"`

	Jpo *JPO `xml:"jpo,omitempty"`

	Card *Card `xml:"card,omitempty"`

	PaymentNetworkToken *PaymentNetworkToken `xml:"paymentNetworkToken,omitempty"`

	VcReply *VCReply `xml:"vcReply,omitempty"`

	DecryptVisaCheckoutDataReply *DecryptVisaCheckoutDataReply `xml:"decryptVisaCheckoutDataReply,omitempty"`

	Reserved *ReplyReserved `xml:"reserved,omitempty"`
}

type FaultDetails struct {
	XMLName xml.Name `xml:"urn:schemas-cybersource-com:transaction-data-1.120 faultDetails"`

	RequestID string `xml:"requestID,omitempty"`
}

type AirlineData struct {
	AgentCode string `xml:"agentCode,omitempty"`

	AgentName string `xml:"agentName,omitempty"`

	TicketIssuerCity string `xml:"ticketIssuerCity,omitempty"`

	TicketIssuerState string `xml:"ticketIssuerState,omitempty"`

	TicketIssuerPostalCode string `xml:"ticketIssuerPostalCode,omitempty"`

	TicketIssuerCountry string `xml:"ticketIssuerCountry,omitempty"`

	TicketIssuerAddress string `xml:"ticketIssuerAddress,omitempty"`

	TicketIssuerCode string `xml:"ticketIssuerCode,omitempty"`

	TicketIssuerName string `xml:"ticketIssuerName,omitempty"`

	TicketNumber string `xml:"ticketNumber,omitempty"`

	CheckDigit int32 `xml:"checkDigit,omitempty"`

	RestrictedTicketIndicator int32 `xml:"restrictedTicketIndicator,omitempty"`

	TransactionType string `xml:"transactionType,omitempty"`

	ExtendedPaymentCode string `xml:"extendedPaymentCode,omitempty"`

	CarrierName string `xml:"carrierName,omitempty"`

	PassengerName string `xml:"passengerName,omitempty"`

	CustomerCode string `xml:"customerCode,omitempty"`

	DocumentType string `xml:"documentType,omitempty"`

	DocumentNumber string `xml:"documentNumber,omitempty"`

	DocumentNumberOfParts string `xml:"documentNumberOfParts,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	InvoiceDate string `xml:"invoiceDate,omitempty"`

	ChargeDetails string `xml:"chargeDetails,omitempty"`

	BookingReference string `xml:"bookingReference,omitempty"`

	TotalFee *Amount `xml:"totalFee,omitempty"`

	ClearingSequence string `xml:"clearingSequence,omitempty"`

	ClearingCount int32 `xml:"clearingCount,omitempty"`

	TotalClearingAmount *Amount `xml:"totalClearingAmount,omitempty"`

	Leg *Leg `xml:"leg,omitempty"`

	NumberOfPassengers string `xml:"numberOfPassengers,omitempty"`

	ReservationSystem string `xml:"reservationSystem,omitempty"`

	ProcessIdentifier string `xml:"processIdentifier,omitempty"`

	IataNumericCode string `xml:"iataNumericCode,omitempty"`

	TicketIssueDate string `xml:"ticketIssueDate,omitempty"`

	ElectronicTicket string `xml:"electronicTicket,omitempty"`

	OriginalTicketNumber string `xml:"originalTicketNumber,omitempty"`

	PurchaseType string `xml:"purchaseType,omitempty"`

	CreditReasonIndicator string `xml:"creditReasonIndicator,omitempty"`

	TicketUpdateIndicator string `xml:"ticketUpdateIndicator,omitempty"`
}

type Leg struct {
	CarrierCode string `xml:"carrierCode,omitempty"`

	FlightNumber string `xml:"flightNumber,omitempty"`

	OriginatingAirportCode string `xml:"originatingAirportCode,omitempty"`

	Class string `xml:"class,omitempty"`

	StopoverCode string `xml:"stopoverCode,omitempty"`

	DepartureDate string `xml:"departureDate,omitempty"`

	Destination string `xml:"destination,omitempty"`

	FareBasis string `xml:"fareBasis,omitempty"`

	DepartTax string `xml:"departTax,omitempty"`

	ConjunctionTicket string `xml:"conjunctionTicket,omitempty"`

	ExchangeTicket string `xml:"exchangeTicket,omitempty"`

	CouponNumber string `xml:"couponNumber,omitempty"`

	DepartureTime string `xml:"departureTime,omitempty"`

	DepartureTimeSegment string `xml:"departureTimeSegment,omitempty"`

	ArrivalTime string `xml:"arrivalTime,omitempty"`

	ArrivalTimeSegment string `xml:"arrivalTimeSegment,omitempty"`

	EndorsementsRestrictions string `xml:"endorsementsRestrictions,omitempty"`

	Fare string `xml:"fare,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type AncillaryData struct {
	TicketNumber string `xml:"ticketNumber,omitempty"`

	PassengerName string `xml:"passengerName,omitempty"`

	ConnectedTicketNumber string `xml:"connectedTicketNumber,omitempty"`

	CreditReasonIndicator string `xml:"creditReasonIndicator,omitempty"`

	Service *Service `xml:"service,omitempty"`
}

type Service struct {
	CategoryCode string `xml:"categoryCode,omitempty"`

	SubcategoryCode string `xml:"subcategoryCode,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type LodgingData struct {
	CheckInDate string `xml:"checkInDate,omitempty"`

	CheckOutDate string `xml:"checkOutDate,omitempty"`

	DailyRoomRate1 *Amount `xml:"dailyRoomRate1,omitempty"`

	DailyRoomRate2 *Amount `xml:"dailyRoomRate2,omitempty"`

	DailyRoomRate3 *Amount `xml:"dailyRoomRate3,omitempty"`

	RoomNights1 int32 `xml:"roomNights1,omitempty"`

	RoomNights2 int32 `xml:"roomNights2,omitempty"`

	RoomNights3 int32 `xml:"roomNights3,omitempty"`

	GuestSmokingPreference string `xml:"guestSmokingPreference,omitempty"`

	NumberOfRoomsBooked int32 `xml:"numberOfRoomsBooked,omitempty"`

	NumberOfGuests int32 `xml:"numberOfGuests,omitempty"`

	RoomBedType string `xml:"roomBedType,omitempty"`

	RoomTaxElements string `xml:"roomTaxElements,omitempty"`

	RoomRateType string `xml:"roomRateType,omitempty"`

	GuestName string `xml:"guestName,omitempty"`

	CustomerServicePhoneNumber string `xml:"customerServicePhoneNumber,omitempty"`

	CorporateClientCode string `xml:"corporateClientCode,omitempty"`

	PromotionalCode string `xml:"promotionalCode,omitempty"`

	AdditionalCoupon string `xml:"additionalCoupon,omitempty"`

	RoomLocation string `xml:"roomLocation,omitempty"`

	SpecialProgramCode string `xml:"specialProgramCode,omitempty"`

	Tax *Amount `xml:"tax,omitempty"`

	PrepaidCost *Amount `xml:"prepaidCost,omitempty"`

	FoodAndBeverageCost *Amount `xml:"foodAndBeverageCost,omitempty"`

	RoomTax *Amount `xml:"roomTax,omitempty"`

	AdjustmentAmount *Amount `xml:"adjustmentAmount,omitempty"`

	PhoneCost *Amount `xml:"phoneCost,omitempty"`

	RestaurantCost *Amount `xml:"restaurantCost,omitempty"`

	RoomServiceCost *Amount `xml:"roomServiceCost,omitempty"`

	MiniBarCost *Amount `xml:"miniBarCost,omitempty"`

	LaundryCost *Amount `xml:"laundryCost,omitempty"`

	MiscellaneousCost *Amount `xml:"miscellaneousCost,omitempty"`

	GiftShopCost *Amount `xml:"giftShopCost,omitempty"`

	MovieCost *Amount `xml:"movieCost,omitempty"`

	HealthClubCost *Amount `xml:"healthClubCost,omitempty"`

	ValetParkingCost *Amount `xml:"valetParkingCost,omitempty"`

	CashDisbursementCost *Amount `xml:"cashDisbursementCost,omitempty"`

	NonRoomCost *Amount `xml:"nonRoomCost,omitempty"`

	BusinessCenterCost *Amount `xml:"businessCenterCost,omitempty"`

	LoungeBarCost *Amount `xml:"loungeBarCost,omitempty"`

	TransportationCost *Amount `xml:"transportationCost,omitempty"`

	GratuityCost *Amount `xml:"gratuityCost,omitempty"`

	ConferenceRoomCost *Amount `xml:"conferenceRoomCost,omitempty"`

	AudioVisualCost *Amount `xml:"audioVisualCost,omitempty"`

	BanquetCost *Amount `xml:"banquetCost,omitempty"`

	InternetAccessCost *Amount `xml:"internetAccessCost,omitempty"`

	EarlyCheckOutCost *Amount `xml:"earlyCheckOutCost,omitempty"`

	NonRoomTax *Amount `xml:"nonRoomTax,omitempty"`

	TravelAgencyCode string `xml:"travelAgencyCode,omitempty"`

	TravelAgencyName string `xml:"travelAgencyName,omitempty"`
}

type Pos struct {
	EntryMode string `xml:"entryMode,omitempty"`

	CardPresent string `xml:"cardPresent,omitempty"`

	TerminalCapability string `xml:"terminalCapability,omitempty"`

	TrackData string `xml:"trackData,omitempty"`

	TerminalID string `xml:"terminalID,omitempty"`

	TerminalType string `xml:"terminalType,omitempty"`

	TerminalLocation string `xml:"terminalLocation,omitempty"`

	TransactionSecurity string `xml:"transactionSecurity,omitempty"`

	CatLevel string `xml:"catLevel,omitempty"`

	ConditionCode string `xml:"conditionCode,omitempty"`

	Environment string `xml:"environment,omitempty"`

	PaymentData string `xml:"paymentData,omitempty"`

	DeviceReaderData string `xml:"deviceReaderData,omitempty"`

	EncryptionAlgorithm string `xml:"encryptionAlgorithm,omitempty"`

	EncodingMethod string `xml:"encodingMethod,omitempty"`

	DeviceID string `xml:"deviceID,omitempty"`

	ServiceCode string `xml:"serviceCode,omitempty"`

	TerminalIDAlternate string `xml:"terminalIDAlternate,omitempty"`
}

type EncryptedPayment struct {
	Descriptor string `xml:"descriptor,omitempty"`

	Data string `xml:"data,omitempty"`

	Encoding string `xml:"encoding,omitempty"`

	WrappedKey string `xml:"wrappedKey,omitempty"`
}

type Installment struct {
	Sequence string `xml:"sequence,omitempty"`

	TotalCount string `xml:"totalCount,omitempty"`

	TotalAmount string `xml:"totalAmount,omitempty"`

	Frequency string `xml:"frequency,omitempty"`

	Amount string `xml:"amount,omitempty"`

	PlanType string `xml:"planType,omitempty"`
}

type MDDField struct {
	Value string

	Id int32 `xml:"id,attr,omitempty"`
}

type MerchantDefinedData struct {
	Field1 string `xml:"field1,omitempty"`

	Field2 string `xml:"field2,omitempty"`

	Field3 string `xml:"field3,omitempty"`

	Field4 string `xml:"field4,omitempty"`

	Field5 string `xml:"field5,omitempty"`

	Field6 string `xml:"field6,omitempty"`

	Field7 string `xml:"field7,omitempty"`

	Field8 string `xml:"field8,omitempty"`

	Field9 string `xml:"field9,omitempty"`

	Field10 string `xml:"field10,omitempty"`

	Field11 string `xml:"field11,omitempty"`

	Field12 string `xml:"field12,omitempty"`

	Field13 string `xml:"field13,omitempty"`

	Field14 string `xml:"field14,omitempty"`

	Field15 string `xml:"field15,omitempty"`

	Field16 string `xml:"field16,omitempty"`

	Field17 string `xml:"field17,omitempty"`

	Field18 string `xml:"field18,omitempty"`

	Field19 string `xml:"field19,omitempty"`

	Field20 string `xml:"field20,omitempty"`

	MddField *MDDField `xml:"mddField,omitempty"`
}

type MerchantSecureData struct {
	Field1 string `xml:"field1,omitempty"`

	Field2 string `xml:"field2,omitempty"`

	Field3 string `xml:"field3,omitempty"`

	Field4 string `xml:"field4,omitempty"`
}

type ReplyReserved struct {
}

type RequestReserved struct {
	Name string `xml:"name,omitempty"`

	Value string `xml:"value,omitempty"`
}

type PayPalGetTxnDetailsReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Payer string `xml:"payer,omitempty"`

	PayerId string `xml:"payerId,omitempty"`

	PayerStatus string `xml:"payerStatus,omitempty"`

	PayerCountry string `xml:"payerCountry,omitempty"`

	PayerBusiness string `xml:"payerBusiness,omitempty"`

	PayerSalutation string `xml:"payerSalutation,omitempty"`

	PayerFirstname string `xml:"payerFirstname,omitempty"`

	PayerMiddlename string `xml:"payerMiddlename,omitempty"`

	PayerLastname string `xml:"payerLastname,omitempty"`

	PayerSuffix string `xml:"payerSuffix,omitempty"`

	AddressID string `xml:"addressID,omitempty"`

	AddressStatus string `xml:"addressStatus,omitempty"`

	ShipToName string `xml:"shipToName,omitempty"`

	ShipToAddress1 string `xml:"shipToAddress1,omitempty"`

	ShipToAddress2 string `xml:"shipToAddress2,omitempty"`

	ShipToCity string `xml:"shipToCity,omitempty"`

	ShipToState string `xml:"shipToState,omitempty"`

	ShipToCountry string `xml:"shipToCountry,omitempty"`

	ShipToZip string `xml:"shipToZip,omitempty"`

	PayerPhone string `xml:"payerPhone,omitempty"`

	TransactionId string `xml:"transactionId,omitempty"`

	ParentTransactionId string `xml:"parentTransactionId,omitempty"`

	PaypalReceiptId string `xml:"paypalReceiptId,omitempty"`

	PaypalTransactiontype string `xml:"paypalTransactiontype,omitempty"`

	PaypalPaymentType string `xml:"paypalPaymentType,omitempty"`

	PaypalOrderTime string `xml:"paypalOrderTime,omitempty"`

	PaypalPaymentGrossAmount string `xml:"paypalPaymentGrossAmount,omitempty"`

	PaypalFeeAmount string `xml:"paypalFeeAmount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	PaypalSettleAmount string `xml:"paypalSettleAmount,omitempty"`

	PaypalTaxAmount string `xml:"paypalTaxAmount,omitempty"`

	PaypalExchangeRate string `xml:"paypalExchangeRate,omitempty"`

	PaypalPaymentStatus string `xml:"paypalPaymentStatus,omitempty"`

	PaypalPendingReason string `xml:"paypalPendingReason,omitempty"`

	PaypalReasonCode string `xml:"paypalReasonCode,omitempty"`

	ProtectionEligibility string `xml:"protectionEligibility,omitempty"`

	ProtectionEligibilityType string `xml:"protectionEligibilityType,omitempty"`

	PaypalNote string `xml:"paypalNote,omitempty"`

	InvoiceNumber string `xml:"invoiceNumber,omitempty"`

	Item *Item `xml:"item,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`
}

type PayPalTransactionSearchReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	Transaction *PaypalTransaction `xml:"transaction,omitempty"`

	ErrorCode string `xml:"errorCode,omitempty"`
}

type PaypalTransaction struct {
	TransactionTime string `xml:"transactionTime,omitempty"`

	TransactionTimeZone string `xml:"transactionTimeZone,omitempty"`

	TransactionType string `xml:"transactionType,omitempty"`

	PaypalPayerOrPayeeEmail string `xml:"paypalPayerOrPayeeEmail,omitempty"`

	CustomerDisplayName string `xml:"customerDisplayName,omitempty"`

	TransactionID string `xml:"transactionID,omitempty"`

	PaypalPaymentStatus string `xml:"paypalPaymentStatus,omitempty"`

	GrandTotalAmount string `xml:"grandTotalAmount,omitempty"`

	Currency string `xml:"currency,omitempty"`

	PaypalFeeAmount string `xml:"paypalFeeAmount,omitempty"`

	PaypalNetAmount string `xml:"paypalNetAmount,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type CCDCCUpdateService struct {
	Reason string `xml:"reason,omitempty"`

	Action string `xml:"action,omitempty"`

	DccRequestID string `xml:"dccRequestID,omitempty"`

	CaptureRequestID string `xml:"captureRequestID,omitempty"`

	CreditRequestID string `xml:"creditRequestID,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type ServiceFee struct {
	MerchantDescriptor string `xml:"merchantDescriptor,omitempty"`

	MerchantDescriptorContact string `xml:"merchantDescriptorContact,omitempty"`

	MerchantDescriptorState string `xml:"merchantDescriptorState,omitempty"`
}

type EmvRequest struct {
	CombinedTags string `xml:"combinedTags,omitempty"`

	CardSequenceNumber string `xml:"cardSequenceNumber,omitempty"`

	AidAndDFname string `xml:"aidAndDFname,omitempty"`
}

type EmvReply struct {
	CombinedTags string `xml:"combinedTags,omitempty"`

	ChipValidationResults string `xml:"chipValidationResults,omitempty"`

	ChipValidationType string `xml:"chipValidationType,omitempty"`
}

type OriginalTransaction struct {
	Amount *Amount `xml:"amount,omitempty"`

	ReasonCode string `xml:"reasonCode,omitempty"`
}

type HostedDataCreateService struct {
	ProfileID string `xml:"profileID,omitempty"`

	PaymentMethod string `xml:"paymentMethod,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type HostedDataRetrieveService struct {
	ProfileID string `xml:"profileID,omitempty"`

	TokenValue string `xml:"tokenValue,omitempty"`

	Run bool `xml:"run,attr,omitempty"`
}

type HostedDataCreateReply struct {
	ResponseMessage string `xml:"responseMessage,omitempty"`

	ReasonCode int32 `xml:"reasonCode,omitempty"`

	CardAccountNumberToken string `xml:"cardAccountNumberToken,omitempty"`

	CustomerID string `xml:"customerID,omitempty"`
}

type HostedDataRetrieveReply struct {
	ResponseMessage string `xml:"responseMessage,omitempty"`

	ReasonCode int32 `xml:"reasonCode,omitempty"`

	AggregatorMerchantIdentifier string `xml:"aggregatorMerchantIdentifier,omitempty"`

	CustomerFirstName string `xml:"customerFirstName,omitempty"`

	CustomerLastName string `xml:"customerLastName,omitempty"`

	CustomerID string `xml:"customerID,omitempty"`

	PaymentMethod string `xml:"paymentMethod,omitempty"`

	BillToStreet1 string `xml:"billToStreet1,omitempty"`

	BillToStreet2 string `xml:"billToStreet2,omitempty"`

	BillToEmail string `xml:"billToEmail,omitempty"`

	BillToState string `xml:"billToState,omitempty"`

	BillToFirstName string `xml:"billToFirstName,omitempty"`

	BillToLastName string `xml:"billToLastName,omitempty"`

	BillToCity string `xml:"billToCity,omitempty"`

	BillToCountry string `xml:"billToCountry,omitempty"`

	BillToPostalCode string `xml:"billToPostalCode,omitempty"`

	CardAccountNumber string `xml:"cardAccountNumber,omitempty"`

	CardType string `xml:"cardType,omitempty"`

	CardExpirationMonth string `xml:"cardExpirationMonth,omitempty"`

	CardExpirationYear string `xml:"cardExpirationYear,omitempty"`

	CardIssueNumber string `xml:"cardIssueNumber,omitempty"`

	CardStartMonth string `xml:"cardStartMonth,omitempty"`

	CardStartYear string `xml:"cardStartYear,omitempty"`
}

type AutoRentalData struct {
	AdjustmentCost *Amount `xml:"adjustmentCost,omitempty"`

	AdjustmentCode string `xml:"adjustmentCode,omitempty"`

	AgreementNumber string `xml:"agreementNumber,omitempty"`

	ClassCode string `xml:"classCode,omitempty"`

	CustomerServicePhoneNumber string `xml:"customerServicePhoneNumber,omitempty"`

	DailyRate *Amount `xml:"dailyRate,omitempty"`

	MileageCost *Amount `xml:"mileageCost,omitempty"`

	GasCost *Amount `xml:"gasCost,omitempty"`

	InsuranceCost *Amount `xml:"insuranceCost,omitempty"`

	LateReturnCost *Amount `xml:"lateReturnCost,omitempty"`

	MaximumFreeMiles int32 `xml:"maximumFreeMiles,omitempty"`

	MilesTraveled int32 `xml:"milesTraveled,omitempty"`

	OneWayCost *Amount `xml:"oneWayCost,omitempty"`

	ParkingViolationCost *Amount `xml:"parkingViolationCost,omitempty"`

	PickUpCity string `xml:"pickUpCity,omitempty"`

	PickUpCountry string `xml:"pickUpCountry,omitempty"`

	PickUpDate string `xml:"pickUpDate,omitempty"`

	PickUpState string `xml:"pickUpState,omitempty"`

	PickUpTime int32 `xml:"pickUpTime,omitempty"`

	RatePerMile *Amount `xml:"ratePerMile,omitempty"`

	RenterName string `xml:"renterName,omitempty"`

	ReturnCity string `xml:"returnCity,omitempty"`

	ReturnCountry string `xml:"returnCountry,omitempty"`

	ReturnDate string `xml:"returnDate,omitempty"`

	ReturnLocationID string `xml:"returnLocationID,omitempty"`

	ReturnState string `xml:"returnState,omitempty"`

	ReturnTime int32 `xml:"returnTime,omitempty"`

	SpecialProgramCode string `xml:"specialProgramCode,omitempty"`
}

type VCReply struct {
	CreationTimeStamp string `xml:"creationTimeStamp,omitempty"`

	AlternateShippingAddressCountryCode string `xml:"alternateShippingAddressCountryCode,omitempty"`

	AlternateShippingAddressPostalCode string `xml:"alternateShippingAddressPostalCode,omitempty"`

	VcAccountLoginName string `xml:"vcAccountLoginName,omitempty"`

	VcAccountFirstName string `xml:"vcAccountFirstName,omitempty"`

	VcAccountLastName string `xml:"vcAccountLastName,omitempty"`

	VcAccountEncryptedID string `xml:"vcAccountEncryptedID,omitempty"`

	VcAccountEmail string `xml:"vcAccountEmail,omitempty"`

	VcAccountMobilePhoneNumber string `xml:"vcAccountMobilePhoneNumber,omitempty"`

	MerchantReferenceID string `xml:"merchantReferenceID,omitempty"`

	SubtotalAmount string `xml:"subtotalAmount,omitempty"`

	ShippingHandlingAmount string `xml:"shippingHandlingAmount,omitempty"`

	TaxAmount string `xml:"taxAmount,omitempty"`

	DiscountAmount string `xml:"discountAmount,omitempty"`

	GiftWrapAmount string `xml:"giftWrapAmount,omitempty"`

	UncategorizedAmount string `xml:"uncategorizedAmount,omitempty"`

	TotalPurchaseAmount string `xml:"totalPurchaseAmount,omitempty"`

	WalletReferenceID string `xml:"walletReferenceID,omitempty"`

	PromotionCode string `xml:"promotionCode,omitempty"`

	PaymentInstrumentID string `xml:"paymentInstrumentID,omitempty"`

	CardVerificationStatus string `xml:"cardVerificationStatus,omitempty"`

	IssuerID string `xml:"issuerID,omitempty"`

	PaymentInstrumentNickName string `xml:"paymentInstrumentNickName,omitempty"`

	NameOnCard string `xml:"nameOnCard,omitempty"`

	CardType string `xml:"cardType,omitempty"`

	CardGroup string `xml:"cardGroup,omitempty"`

	CardArt *VCCardArt `xml:"cardArt,omitempty"`

	RiskAdvice string `xml:"riskAdvice,omitempty"`

	RiskScore string `xml:"riskScore,omitempty"`

	RiskAdditionalData string `xml:"riskAdditionalData,omitempty"`

	AvsCodeRaw string `xml:"avsCodeRaw,omitempty"`

	CvnCodeRaw string `xml:"cvnCodeRaw,omitempty"`

	EciRaw string `xml:"eciRaw,omitempty"`

	Eci string `xml:"eci,omitempty"`

	Cavv string `xml:"cavv,omitempty"`

	VeresEnrolled string `xml:"veresEnrolled,omitempty"`

	VeresTimeStamp string `xml:"veresTimeStamp,omitempty"`

	ParesStatus string `xml:"paresStatus,omitempty"`

	ParesTimeStamp string `xml:"paresTimeStamp,omitempty"`

	Xid string `xml:"xid,omitempty"`

	CustomData *VCCustomData `xml:"customData,omitempty"`
}

type VCCardArt struct {
	FileName string `xml:"fileName,omitempty"`

	Height string `xml:"height,omitempty"`

	Width string `xml:"width,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type VCCustomData struct {
	Name string `xml:"name,omitempty"`

	Value string `xml:"value,omitempty"`

	Id int32 `xml:"id,attr,omitempty"`
}

type DecryptVisaCheckoutDataReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`
}

type EncryptPaymentDataReply struct {
	ReasonCode int32 `xml:"reasonCode,omitempty"`

	RequestDateTime string `xml:"requestDateTime,omitempty"`
}

type INVPTransactionProcessor interface {
	RunTransaction(request *string) (*string, error)

	RunTransactionContext(ctx context.Context, request *string) (*string, error)
}

type iNVPTransactionProcessor struct {
	client *soap.Client
}

func NewINVPTransactionProcessor(client *soap.Client) INVPTransactionProcessor {
	return &iNVPTransactionProcessor{
		client: client,
	}
}

func (service *iNVPTransactionProcessor) RunTransactionContext(ctx context.Context, request *string) (*string, error) {
	response := new(string)
	err := service.client.CallContext(ctx, "runTransaction", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iNVPTransactionProcessor) RunTransaction(request *string) (*string, error) {
	return service.RunTransactionContext(
		context.Background(),
		request,
	)
}
